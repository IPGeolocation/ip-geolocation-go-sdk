/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the TimezoneLocode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimezoneLocode{}

// TimezoneLocode struct for TimezoneLocode
type TimezoneLocode struct {
	LoCode *string `json:"lo_code,omitempty"`
	City *string `json:"city,omitempty"`
	StateCode *string `json:"state_code,omitempty"`
	CountryCode *string `json:"country_code,omitempty"`
	CountryName *string `json:"country_name,omitempty"`
	LocationType *string `json:"location_type,omitempty"`
	Latitude *string `json:"latitude,omitempty"`
	Longitude *string `json:"longitude,omitempty"`
}

// NewTimezoneLocode instantiates a new TimezoneLocode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimezoneLocode() *TimezoneLocode {
	this := TimezoneLocode{}
	return &this
}

// NewTimezoneLocodeWithDefaults instantiates a new TimezoneLocode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimezoneLocodeWithDefaults() *TimezoneLocode {
	this := TimezoneLocode{}
	return &this
}

// GetLoCode returns the LoCode field value if set, zero value otherwise.
func (o *TimezoneLocode) GetLoCode() string {
	if o == nil || IsNil(o.LoCode) {
		var ret string
		return ret
	}
	return *o.LoCode
}

// GetLoCodeOk returns a tuple with the LoCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneLocode) GetLoCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LoCode) {
		return nil, false
	}
	return o.LoCode, true
}

// HasLoCode returns a boolean if a field has been set.
func (o *TimezoneLocode) HasLoCode() bool {
	if o != nil && !IsNil(o.LoCode) {
		return true
	}

	return false
}

// SetLoCode gets a reference to the given string and assigns it to the LoCode field.
func (o *TimezoneLocode) SetLoCode(v string) {
	o.LoCode = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *TimezoneLocode) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneLocode) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *TimezoneLocode) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *TimezoneLocode) SetCity(v string) {
	o.City = &v
}

// GetStateCode returns the StateCode field value if set, zero value otherwise.
func (o *TimezoneLocode) GetStateCode() string {
	if o == nil || IsNil(o.StateCode) {
		var ret string
		return ret
	}
	return *o.StateCode
}

// GetStateCodeOk returns a tuple with the StateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneLocode) GetStateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StateCode) {
		return nil, false
	}
	return o.StateCode, true
}

// HasStateCode returns a boolean if a field has been set.
func (o *TimezoneLocode) HasStateCode() bool {
	if o != nil && !IsNil(o.StateCode) {
		return true
	}

	return false
}

// SetStateCode gets a reference to the given string and assigns it to the StateCode field.
func (o *TimezoneLocode) SetStateCode(v string) {
	o.StateCode = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *TimezoneLocode) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneLocode) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *TimezoneLocode) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *TimezoneLocode) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCountryName returns the CountryName field value if set, zero value otherwise.
func (o *TimezoneLocode) GetCountryName() string {
	if o == nil || IsNil(o.CountryName) {
		var ret string
		return ret
	}
	return *o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneLocode) GetCountryNameOk() (*string, bool) {
	if o == nil || IsNil(o.CountryName) {
		return nil, false
	}
	return o.CountryName, true
}

// HasCountryName returns a boolean if a field has been set.
func (o *TimezoneLocode) HasCountryName() bool {
	if o != nil && !IsNil(o.CountryName) {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given string and assigns it to the CountryName field.
func (o *TimezoneLocode) SetCountryName(v string) {
	o.CountryName = &v
}

// GetLocationType returns the LocationType field value if set, zero value otherwise.
func (o *TimezoneLocode) GetLocationType() string {
	if o == nil || IsNil(o.LocationType) {
		var ret string
		return ret
	}
	return *o.LocationType
}

// GetLocationTypeOk returns a tuple with the LocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneLocode) GetLocationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LocationType) {
		return nil, false
	}
	return o.LocationType, true
}

// HasLocationType returns a boolean if a field has been set.
func (o *TimezoneLocode) HasLocationType() bool {
	if o != nil && !IsNil(o.LocationType) {
		return true
	}

	return false
}

// SetLocationType gets a reference to the given string and assigns it to the LocationType field.
func (o *TimezoneLocode) SetLocationType(v string) {
	o.LocationType = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *TimezoneLocode) GetLatitude() string {
	if o == nil || IsNil(o.Latitude) {
		var ret string
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneLocode) GetLatitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *TimezoneLocode) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given string and assigns it to the Latitude field.
func (o *TimezoneLocode) SetLatitude(v string) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *TimezoneLocode) GetLongitude() string {
	if o == nil || IsNil(o.Longitude) {
		var ret string
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneLocode) GetLongitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *TimezoneLocode) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given string and assigns it to the Longitude field.
func (o *TimezoneLocode) SetLongitude(v string) {
	o.Longitude = &v
}

func (o TimezoneLocode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimezoneLocode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoCode) {
		toSerialize["lo_code"] = o.LoCode
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.StateCode) {
		toSerialize["state_code"] = o.StateCode
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.CountryName) {
		toSerialize["country_name"] = o.CountryName
	}
	if !IsNil(o.LocationType) {
		toSerialize["location_type"] = o.LocationType
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	return toSerialize, nil
}

type NullableTimezoneLocode struct {
	value *TimezoneLocode
	isSet bool
}

func (v NullableTimezoneLocode) Get() *TimezoneLocode {
	return v.value
}

func (v *NullableTimezoneLocode) Set(val *TimezoneLocode) {
	v.value = val
	v.isSet = true
}

func (v NullableTimezoneLocode) IsSet() bool {
	return v.isSet
}

func (v *NullableTimezoneLocode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimezoneLocode(val *TimezoneLocode) *NullableTimezoneLocode {
	return &NullableTimezoneLocode{value: val, isSet: true}
}

func (v NullableTimezoneLocode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimezoneLocode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


