/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the Security type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Security{}

// Security struct for Security
type Security struct {
	ThreatScore *int32 `json:"threat_score,omitempty"`
	IsTor *bool `json:"is_tor,omitempty"`
	IsProxy *bool `json:"is_proxy,omitempty"`
	ProxyType *string `json:"proxy_type,omitempty"`
	ProxyProvider *string `json:"proxy_provider,omitempty"`
	IsAnonymous *bool `json:"is_anonymous,omitempty"`
	IsKnownAttacker *bool `json:"is_known_attacker,omitempty"`
	IsSpam *bool `json:"is_spam,omitempty"`
	IsBot *bool `json:"is_bot,omitempty"`
	IsCloudProvider *bool `json:"is_cloud_provider,omitempty"`
	CloudProvider *string `json:"cloud_provider,omitempty"`
}

// NewSecurity instantiates a new Security object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurity() *Security {
	this := Security{}
	return &this
}

// NewSecurityWithDefaults instantiates a new Security object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityWithDefaults() *Security {
	this := Security{}
	return &this
}

// GetThreatScore returns the ThreatScore field value if set, zero value otherwise.
func (o *Security) GetThreatScore() int32 {
	if o == nil || IsNil(o.ThreatScore) {
		var ret int32
		return ret
	}
	return *o.ThreatScore
}

// GetThreatScoreOk returns a tuple with the ThreatScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetThreatScoreOk() (*int32, bool) {
	if o == nil || IsNil(o.ThreatScore) {
		return nil, false
	}
	return o.ThreatScore, true
}

// HasThreatScore returns a boolean if a field has been set.
func (o *Security) HasThreatScore() bool {
	if o != nil && !IsNil(o.ThreatScore) {
		return true
	}

	return false
}

// SetThreatScore gets a reference to the given int32 and assigns it to the ThreatScore field.
func (o *Security) SetThreatScore(v int32) {
	o.ThreatScore = &v
}

// GetIsTor returns the IsTor field value if set, zero value otherwise.
func (o *Security) GetIsTor() bool {
	if o == nil || IsNil(o.IsTor) {
		var ret bool
		return ret
	}
	return *o.IsTor
}

// GetIsTorOk returns a tuple with the IsTor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetIsTorOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTor) {
		return nil, false
	}
	return o.IsTor, true
}

// HasIsTor returns a boolean if a field has been set.
func (o *Security) HasIsTor() bool {
	if o != nil && !IsNil(o.IsTor) {
		return true
	}

	return false
}

// SetIsTor gets a reference to the given bool and assigns it to the IsTor field.
func (o *Security) SetIsTor(v bool) {
	o.IsTor = &v
}

// GetIsProxy returns the IsProxy field value if set, zero value otherwise.
func (o *Security) GetIsProxy() bool {
	if o == nil || IsNil(o.IsProxy) {
		var ret bool
		return ret
	}
	return *o.IsProxy
}

// GetIsProxyOk returns a tuple with the IsProxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetIsProxyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsProxy) {
		return nil, false
	}
	return o.IsProxy, true
}

// HasIsProxy returns a boolean if a field has been set.
func (o *Security) HasIsProxy() bool {
	if o != nil && !IsNil(o.IsProxy) {
		return true
	}

	return false
}

// SetIsProxy gets a reference to the given bool and assigns it to the IsProxy field.
func (o *Security) SetIsProxy(v bool) {
	o.IsProxy = &v
}

// GetProxyType returns the ProxyType field value if set, zero value otherwise.
func (o *Security) GetProxyType() string {
	if o == nil || IsNil(o.ProxyType) {
		var ret string
		return ret
	}
	return *o.ProxyType
}

// GetProxyTypeOk returns a tuple with the ProxyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetProxyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyType) {
		return nil, false
	}
	return o.ProxyType, true
}

// HasProxyType returns a boolean if a field has been set.
func (o *Security) HasProxyType() bool {
	if o != nil && !IsNil(o.ProxyType) {
		return true
	}

	return false
}

// SetProxyType gets a reference to the given string and assigns it to the ProxyType field.
func (o *Security) SetProxyType(v string) {
	o.ProxyType = &v
}

// GetProxyProvider returns the ProxyProvider field value if set, zero value otherwise.
func (o *Security) GetProxyProvider() string {
	if o == nil || IsNil(o.ProxyProvider) {
		var ret string
		return ret
	}
	return *o.ProxyProvider
}

// GetProxyProviderOk returns a tuple with the ProxyProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetProxyProviderOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyProvider) {
		return nil, false
	}
	return o.ProxyProvider, true
}

// HasProxyProvider returns a boolean if a field has been set.
func (o *Security) HasProxyProvider() bool {
	if o != nil && !IsNil(o.ProxyProvider) {
		return true
	}

	return false
}

// SetProxyProvider gets a reference to the given string and assigns it to the ProxyProvider field.
func (o *Security) SetProxyProvider(v string) {
	o.ProxyProvider = &v
}

// GetIsAnonymous returns the IsAnonymous field value if set, zero value otherwise.
func (o *Security) GetIsAnonymous() bool {
	if o == nil || IsNil(o.IsAnonymous) {
		var ret bool
		return ret
	}
	return *o.IsAnonymous
}

// GetIsAnonymousOk returns a tuple with the IsAnonymous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetIsAnonymousOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAnonymous) {
		return nil, false
	}
	return o.IsAnonymous, true
}

// HasIsAnonymous returns a boolean if a field has been set.
func (o *Security) HasIsAnonymous() bool {
	if o != nil && !IsNil(o.IsAnonymous) {
		return true
	}

	return false
}

// SetIsAnonymous gets a reference to the given bool and assigns it to the IsAnonymous field.
func (o *Security) SetIsAnonymous(v bool) {
	o.IsAnonymous = &v
}

// GetIsKnownAttacker returns the IsKnownAttacker field value if set, zero value otherwise.
func (o *Security) GetIsKnownAttacker() bool {
	if o == nil || IsNil(o.IsKnownAttacker) {
		var ret bool
		return ret
	}
	return *o.IsKnownAttacker
}

// GetIsKnownAttackerOk returns a tuple with the IsKnownAttacker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetIsKnownAttackerOk() (*bool, bool) {
	if o == nil || IsNil(o.IsKnownAttacker) {
		return nil, false
	}
	return o.IsKnownAttacker, true
}

// HasIsKnownAttacker returns a boolean if a field has been set.
func (o *Security) HasIsKnownAttacker() bool {
	if o != nil && !IsNil(o.IsKnownAttacker) {
		return true
	}

	return false
}

// SetIsKnownAttacker gets a reference to the given bool and assigns it to the IsKnownAttacker field.
func (o *Security) SetIsKnownAttacker(v bool) {
	o.IsKnownAttacker = &v
}

// GetIsSpam returns the IsSpam field value if set, zero value otherwise.
func (o *Security) GetIsSpam() bool {
	if o == nil || IsNil(o.IsSpam) {
		var ret bool
		return ret
	}
	return *o.IsSpam
}

// GetIsSpamOk returns a tuple with the IsSpam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetIsSpamOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSpam) {
		return nil, false
	}
	return o.IsSpam, true
}

// HasIsSpam returns a boolean if a field has been set.
func (o *Security) HasIsSpam() bool {
	if o != nil && !IsNil(o.IsSpam) {
		return true
	}

	return false
}

// SetIsSpam gets a reference to the given bool and assigns it to the IsSpam field.
func (o *Security) SetIsSpam(v bool) {
	o.IsSpam = &v
}

// GetIsBot returns the IsBot field value if set, zero value otherwise.
func (o *Security) GetIsBot() bool {
	if o == nil || IsNil(o.IsBot) {
		var ret bool
		return ret
	}
	return *o.IsBot
}

// GetIsBotOk returns a tuple with the IsBot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetIsBotOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBot) {
		return nil, false
	}
	return o.IsBot, true
}

// HasIsBot returns a boolean if a field has been set.
func (o *Security) HasIsBot() bool {
	if o != nil && !IsNil(o.IsBot) {
		return true
	}

	return false
}

// SetIsBot gets a reference to the given bool and assigns it to the IsBot field.
func (o *Security) SetIsBot(v bool) {
	o.IsBot = &v
}

// GetIsCloudProvider returns the IsCloudProvider field value if set, zero value otherwise.
func (o *Security) GetIsCloudProvider() bool {
	if o == nil || IsNil(o.IsCloudProvider) {
		var ret bool
		return ret
	}
	return *o.IsCloudProvider
}

// GetIsCloudProviderOk returns a tuple with the IsCloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetIsCloudProviderOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCloudProvider) {
		return nil, false
	}
	return o.IsCloudProvider, true
}

// HasIsCloudProvider returns a boolean if a field has been set.
func (o *Security) HasIsCloudProvider() bool {
	if o != nil && !IsNil(o.IsCloudProvider) {
		return true
	}

	return false
}

// SetIsCloudProvider gets a reference to the given bool and assigns it to the IsCloudProvider field.
func (o *Security) SetIsCloudProvider(v bool) {
	o.IsCloudProvider = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *Security) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Security) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *Security) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *Security) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

func (o Security) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Security) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ThreatScore) {
		toSerialize["threat_score"] = o.ThreatScore
	}
	if !IsNil(o.IsTor) {
		toSerialize["is_tor"] = o.IsTor
	}
	if !IsNil(o.IsProxy) {
		toSerialize["is_proxy"] = o.IsProxy
	}
	if !IsNil(o.ProxyType) {
		toSerialize["proxy_type"] = o.ProxyType
	}
	if !IsNil(o.ProxyProvider) {
		toSerialize["proxy_provider"] = o.ProxyProvider
	}
	if !IsNil(o.IsAnonymous) {
		toSerialize["is_anonymous"] = o.IsAnonymous
	}
	if !IsNil(o.IsKnownAttacker) {
		toSerialize["is_known_attacker"] = o.IsKnownAttacker
	}
	if !IsNil(o.IsSpam) {
		toSerialize["is_spam"] = o.IsSpam
	}
	if !IsNil(o.IsBot) {
		toSerialize["is_bot"] = o.IsBot
	}
	if !IsNil(o.IsCloudProvider) {
		toSerialize["is_cloud_provider"] = o.IsCloudProvider
	}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	return toSerialize, nil
}

type NullableSecurity struct {
	value *Security
	isSet bool
}

func (v NullableSecurity) Get() *Security {
	return v.value
}

func (v *NullableSecurity) Set(val *Security) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurity) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurity(val *Security) *NullableSecurity {
	return &NullableSecurity{value: val, isSet: true}
}

func (v NullableSecurity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


