/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the Astronomy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Astronomy{}

// Astronomy struct for Astronomy
type Astronomy struct {
	TimeZone *string `json:"time_zone,omitempty"`
	Date *string `json:"date,omitempty"`
	CurrentTime *string `json:"current_time,omitempty"`
	MidNight *string `json:"mid_night,omitempty"`
	NightEnd *string `json:"night_end,omitempty"`
	Morning *AstronomyMorning `json:"morning,omitempty"`
	Sunrise *string `json:"sunrise,omitempty"`
	Sunset *string `json:"sunset,omitempty"`
	Evening *AstronomyEvening `json:"evening,omitempty"`
	NightBegin *string `json:"night_begin,omitempty"`
	SunStatus *string `json:"sun_status,omitempty"`
	SolarNoon *string `json:"solar_noon,omitempty"`
	DayLength *string `json:"day_length,omitempty"`
	SunAltitude *float32 `json:"sun_altitude,omitempty"`
	SunDistance *float32 `json:"sun_distance,omitempty"`
	SunAzimuth *float32 `json:"sun_azimuth,omitempty"`
	MoonPhase *string `json:"moon_phase,omitempty"`
	Moonrise *string `json:"moonrise,omitempty"`
	Moonset *string `json:"moonset,omitempty"`
	MoonStatus *string `json:"moon_status,omitempty"`
	MoonAltitude *float32 `json:"moon_altitude,omitempty"`
	MoonDistance *float32 `json:"moon_distance,omitempty"`
	MoonAzimuth *float32 `json:"moon_azimuth,omitempty"`
	MoonParallacticAngle *float32 `json:"moon_parallactic_angle,omitempty"`
	MoonIlluminationPercentage *string `json:"moon_illumination_percentage,omitempty"`
	MoonAngle *float32 `json:"moon_angle,omitempty"`
}

// NewAstronomy instantiates a new Astronomy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAstronomy() *Astronomy {
	this := Astronomy{}
	return &this
}

// NewAstronomyWithDefaults instantiates a new Astronomy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAstronomyWithDefaults() *Astronomy {
	this := Astronomy{}
	return &this
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *Astronomy) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *Astronomy) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *Astronomy) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *Astronomy) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *Astronomy) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *Astronomy) SetDate(v string) {
	o.Date = &v
}

// GetCurrentTime returns the CurrentTime field value if set, zero value otherwise.
func (o *Astronomy) GetCurrentTime() string {
	if o == nil || IsNil(o.CurrentTime) {
		var ret string
		return ret
	}
	return *o.CurrentTime
}

// GetCurrentTimeOk returns a tuple with the CurrentTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetCurrentTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentTime) {
		return nil, false
	}
	return o.CurrentTime, true
}

// HasCurrentTime returns a boolean if a field has been set.
func (o *Astronomy) HasCurrentTime() bool {
	if o != nil && !IsNil(o.CurrentTime) {
		return true
	}

	return false
}

// SetCurrentTime gets a reference to the given string and assigns it to the CurrentTime field.
func (o *Astronomy) SetCurrentTime(v string) {
	o.CurrentTime = &v
}

// GetMidNight returns the MidNight field value if set, zero value otherwise.
func (o *Astronomy) GetMidNight() string {
	if o == nil || IsNil(o.MidNight) {
		var ret string
		return ret
	}
	return *o.MidNight
}

// GetMidNightOk returns a tuple with the MidNight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMidNightOk() (*string, bool) {
	if o == nil || IsNil(o.MidNight) {
		return nil, false
	}
	return o.MidNight, true
}

// HasMidNight returns a boolean if a field has been set.
func (o *Astronomy) HasMidNight() bool {
	if o != nil && !IsNil(o.MidNight) {
		return true
	}

	return false
}

// SetMidNight gets a reference to the given string and assigns it to the MidNight field.
func (o *Astronomy) SetMidNight(v string) {
	o.MidNight = &v
}

// GetNightEnd returns the NightEnd field value if set, zero value otherwise.
func (o *Astronomy) GetNightEnd() string {
	if o == nil || IsNil(o.NightEnd) {
		var ret string
		return ret
	}
	return *o.NightEnd
}

// GetNightEndOk returns a tuple with the NightEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetNightEndOk() (*string, bool) {
	if o == nil || IsNil(o.NightEnd) {
		return nil, false
	}
	return o.NightEnd, true
}

// HasNightEnd returns a boolean if a field has been set.
func (o *Astronomy) HasNightEnd() bool {
	if o != nil && !IsNil(o.NightEnd) {
		return true
	}

	return false
}

// SetNightEnd gets a reference to the given string and assigns it to the NightEnd field.
func (o *Astronomy) SetNightEnd(v string) {
	o.NightEnd = &v
}

// GetMorning returns the Morning field value if set, zero value otherwise.
func (o *Astronomy) GetMorning() AstronomyMorning {
	if o == nil || IsNil(o.Morning) {
		var ret AstronomyMorning
		return ret
	}
	return *o.Morning
}

// GetMorningOk returns a tuple with the Morning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMorningOk() (*AstronomyMorning, bool) {
	if o == nil || IsNil(o.Morning) {
		return nil, false
	}
	return o.Morning, true
}

// HasMorning returns a boolean if a field has been set.
func (o *Astronomy) HasMorning() bool {
	if o != nil && !IsNil(o.Morning) {
		return true
	}

	return false
}

// SetMorning gets a reference to the given AstronomyMorning and assigns it to the Morning field.
func (o *Astronomy) SetMorning(v AstronomyMorning) {
	o.Morning = &v
}

// GetSunrise returns the Sunrise field value if set, zero value otherwise.
func (o *Astronomy) GetSunrise() string {
	if o == nil || IsNil(o.Sunrise) {
		var ret string
		return ret
	}
	return *o.Sunrise
}

// GetSunriseOk returns a tuple with the Sunrise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetSunriseOk() (*string, bool) {
	if o == nil || IsNil(o.Sunrise) {
		return nil, false
	}
	return o.Sunrise, true
}

// HasSunrise returns a boolean if a field has been set.
func (o *Astronomy) HasSunrise() bool {
	if o != nil && !IsNil(o.Sunrise) {
		return true
	}

	return false
}

// SetSunrise gets a reference to the given string and assigns it to the Sunrise field.
func (o *Astronomy) SetSunrise(v string) {
	o.Sunrise = &v
}

// GetSunset returns the Sunset field value if set, zero value otherwise.
func (o *Astronomy) GetSunset() string {
	if o == nil || IsNil(o.Sunset) {
		var ret string
		return ret
	}
	return *o.Sunset
}

// GetSunsetOk returns a tuple with the Sunset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetSunsetOk() (*string, bool) {
	if o == nil || IsNil(o.Sunset) {
		return nil, false
	}
	return o.Sunset, true
}

// HasSunset returns a boolean if a field has been set.
func (o *Astronomy) HasSunset() bool {
	if o != nil && !IsNil(o.Sunset) {
		return true
	}

	return false
}

// SetSunset gets a reference to the given string and assigns it to the Sunset field.
func (o *Astronomy) SetSunset(v string) {
	o.Sunset = &v
}

// GetEvening returns the Evening field value if set, zero value otherwise.
func (o *Astronomy) GetEvening() AstronomyEvening {
	if o == nil || IsNil(o.Evening) {
		var ret AstronomyEvening
		return ret
	}
	return *o.Evening
}

// GetEveningOk returns a tuple with the Evening field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetEveningOk() (*AstronomyEvening, bool) {
	if o == nil || IsNil(o.Evening) {
		return nil, false
	}
	return o.Evening, true
}

// HasEvening returns a boolean if a field has been set.
func (o *Astronomy) HasEvening() bool {
	if o != nil && !IsNil(o.Evening) {
		return true
	}

	return false
}

// SetEvening gets a reference to the given AstronomyEvening and assigns it to the Evening field.
func (o *Astronomy) SetEvening(v AstronomyEvening) {
	o.Evening = &v
}

// GetNightBegin returns the NightBegin field value if set, zero value otherwise.
func (o *Astronomy) GetNightBegin() string {
	if o == nil || IsNil(o.NightBegin) {
		var ret string
		return ret
	}
	return *o.NightBegin
}

// GetNightBeginOk returns a tuple with the NightBegin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetNightBeginOk() (*string, bool) {
	if o == nil || IsNil(o.NightBegin) {
		return nil, false
	}
	return o.NightBegin, true
}

// HasNightBegin returns a boolean if a field has been set.
func (o *Astronomy) HasNightBegin() bool {
	if o != nil && !IsNil(o.NightBegin) {
		return true
	}

	return false
}

// SetNightBegin gets a reference to the given string and assigns it to the NightBegin field.
func (o *Astronomy) SetNightBegin(v string) {
	o.NightBegin = &v
}

// GetSunStatus returns the SunStatus field value if set, zero value otherwise.
func (o *Astronomy) GetSunStatus() string {
	if o == nil || IsNil(o.SunStatus) {
		var ret string
		return ret
	}
	return *o.SunStatus
}

// GetSunStatusOk returns a tuple with the SunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetSunStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SunStatus) {
		return nil, false
	}
	return o.SunStatus, true
}

// HasSunStatus returns a boolean if a field has been set.
func (o *Astronomy) HasSunStatus() bool {
	if o != nil && !IsNil(o.SunStatus) {
		return true
	}

	return false
}

// SetSunStatus gets a reference to the given string and assigns it to the SunStatus field.
func (o *Astronomy) SetSunStatus(v string) {
	o.SunStatus = &v
}

// GetSolarNoon returns the SolarNoon field value if set, zero value otherwise.
func (o *Astronomy) GetSolarNoon() string {
	if o == nil || IsNil(o.SolarNoon) {
		var ret string
		return ret
	}
	return *o.SolarNoon
}

// GetSolarNoonOk returns a tuple with the SolarNoon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetSolarNoonOk() (*string, bool) {
	if o == nil || IsNil(o.SolarNoon) {
		return nil, false
	}
	return o.SolarNoon, true
}

// HasSolarNoon returns a boolean if a field has been set.
func (o *Astronomy) HasSolarNoon() bool {
	if o != nil && !IsNil(o.SolarNoon) {
		return true
	}

	return false
}

// SetSolarNoon gets a reference to the given string and assigns it to the SolarNoon field.
func (o *Astronomy) SetSolarNoon(v string) {
	o.SolarNoon = &v
}

// GetDayLength returns the DayLength field value if set, zero value otherwise.
func (o *Astronomy) GetDayLength() string {
	if o == nil || IsNil(o.DayLength) {
		var ret string
		return ret
	}
	return *o.DayLength
}

// GetDayLengthOk returns a tuple with the DayLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetDayLengthOk() (*string, bool) {
	if o == nil || IsNil(o.DayLength) {
		return nil, false
	}
	return o.DayLength, true
}

// HasDayLength returns a boolean if a field has been set.
func (o *Astronomy) HasDayLength() bool {
	if o != nil && !IsNil(o.DayLength) {
		return true
	}

	return false
}

// SetDayLength gets a reference to the given string and assigns it to the DayLength field.
func (o *Astronomy) SetDayLength(v string) {
	o.DayLength = &v
}

// GetSunAltitude returns the SunAltitude field value if set, zero value otherwise.
func (o *Astronomy) GetSunAltitude() float32 {
	if o == nil || IsNil(o.SunAltitude) {
		var ret float32
		return ret
	}
	return *o.SunAltitude
}

// GetSunAltitudeOk returns a tuple with the SunAltitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetSunAltitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.SunAltitude) {
		return nil, false
	}
	return o.SunAltitude, true
}

// HasSunAltitude returns a boolean if a field has been set.
func (o *Astronomy) HasSunAltitude() bool {
	if o != nil && !IsNil(o.SunAltitude) {
		return true
	}

	return false
}

// SetSunAltitude gets a reference to the given float32 and assigns it to the SunAltitude field.
func (o *Astronomy) SetSunAltitude(v float32) {
	o.SunAltitude = &v
}

// GetSunDistance returns the SunDistance field value if set, zero value otherwise.
func (o *Astronomy) GetSunDistance() float32 {
	if o == nil || IsNil(o.SunDistance) {
		var ret float32
		return ret
	}
	return *o.SunDistance
}

// GetSunDistanceOk returns a tuple with the SunDistance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetSunDistanceOk() (*float32, bool) {
	if o == nil || IsNil(o.SunDistance) {
		return nil, false
	}
	return o.SunDistance, true
}

// HasSunDistance returns a boolean if a field has been set.
func (o *Astronomy) HasSunDistance() bool {
	if o != nil && !IsNil(o.SunDistance) {
		return true
	}

	return false
}

// SetSunDistance gets a reference to the given float32 and assigns it to the SunDistance field.
func (o *Astronomy) SetSunDistance(v float32) {
	o.SunDistance = &v
}

// GetSunAzimuth returns the SunAzimuth field value if set, zero value otherwise.
func (o *Astronomy) GetSunAzimuth() float32 {
	if o == nil || IsNil(o.SunAzimuth) {
		var ret float32
		return ret
	}
	return *o.SunAzimuth
}

// GetSunAzimuthOk returns a tuple with the SunAzimuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetSunAzimuthOk() (*float32, bool) {
	if o == nil || IsNil(o.SunAzimuth) {
		return nil, false
	}
	return o.SunAzimuth, true
}

// HasSunAzimuth returns a boolean if a field has been set.
func (o *Astronomy) HasSunAzimuth() bool {
	if o != nil && !IsNil(o.SunAzimuth) {
		return true
	}

	return false
}

// SetSunAzimuth gets a reference to the given float32 and assigns it to the SunAzimuth field.
func (o *Astronomy) SetSunAzimuth(v float32) {
	o.SunAzimuth = &v
}

// GetMoonPhase returns the MoonPhase field value if set, zero value otherwise.
func (o *Astronomy) GetMoonPhase() string {
	if o == nil || IsNil(o.MoonPhase) {
		var ret string
		return ret
	}
	return *o.MoonPhase
}

// GetMoonPhaseOk returns a tuple with the MoonPhase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMoonPhaseOk() (*string, bool) {
	if o == nil || IsNil(o.MoonPhase) {
		return nil, false
	}
	return o.MoonPhase, true
}

// HasMoonPhase returns a boolean if a field has been set.
func (o *Astronomy) HasMoonPhase() bool {
	if o != nil && !IsNil(o.MoonPhase) {
		return true
	}

	return false
}

// SetMoonPhase gets a reference to the given string and assigns it to the MoonPhase field.
func (o *Astronomy) SetMoonPhase(v string) {
	o.MoonPhase = &v
}

// GetMoonrise returns the Moonrise field value if set, zero value otherwise.
func (o *Astronomy) GetMoonrise() string {
	if o == nil || IsNil(o.Moonrise) {
		var ret string
		return ret
	}
	return *o.Moonrise
}

// GetMoonriseOk returns a tuple with the Moonrise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMoonriseOk() (*string, bool) {
	if o == nil || IsNil(o.Moonrise) {
		return nil, false
	}
	return o.Moonrise, true
}

// HasMoonrise returns a boolean if a field has been set.
func (o *Astronomy) HasMoonrise() bool {
	if o != nil && !IsNil(o.Moonrise) {
		return true
	}

	return false
}

// SetMoonrise gets a reference to the given string and assigns it to the Moonrise field.
func (o *Astronomy) SetMoonrise(v string) {
	o.Moonrise = &v
}

// GetMoonset returns the Moonset field value if set, zero value otherwise.
func (o *Astronomy) GetMoonset() string {
	if o == nil || IsNil(o.Moonset) {
		var ret string
		return ret
	}
	return *o.Moonset
}

// GetMoonsetOk returns a tuple with the Moonset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMoonsetOk() (*string, bool) {
	if o == nil || IsNil(o.Moonset) {
		return nil, false
	}
	return o.Moonset, true
}

// HasMoonset returns a boolean if a field has been set.
func (o *Astronomy) HasMoonset() bool {
	if o != nil && !IsNil(o.Moonset) {
		return true
	}

	return false
}

// SetMoonset gets a reference to the given string and assigns it to the Moonset field.
func (o *Astronomy) SetMoonset(v string) {
	o.Moonset = &v
}

// GetMoonStatus returns the MoonStatus field value if set, zero value otherwise.
func (o *Astronomy) GetMoonStatus() string {
	if o == nil || IsNil(o.MoonStatus) {
		var ret string
		return ret
	}
	return *o.MoonStatus
}

// GetMoonStatusOk returns a tuple with the MoonStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMoonStatusOk() (*string, bool) {
	if o == nil || IsNil(o.MoonStatus) {
		return nil, false
	}
	return o.MoonStatus, true
}

// HasMoonStatus returns a boolean if a field has been set.
func (o *Astronomy) HasMoonStatus() bool {
	if o != nil && !IsNil(o.MoonStatus) {
		return true
	}

	return false
}

// SetMoonStatus gets a reference to the given string and assigns it to the MoonStatus field.
func (o *Astronomy) SetMoonStatus(v string) {
	o.MoonStatus = &v
}

// GetMoonAltitude returns the MoonAltitude field value if set, zero value otherwise.
func (o *Astronomy) GetMoonAltitude() float32 {
	if o == nil || IsNil(o.MoonAltitude) {
		var ret float32
		return ret
	}
	return *o.MoonAltitude
}

// GetMoonAltitudeOk returns a tuple with the MoonAltitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMoonAltitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.MoonAltitude) {
		return nil, false
	}
	return o.MoonAltitude, true
}

// HasMoonAltitude returns a boolean if a field has been set.
func (o *Astronomy) HasMoonAltitude() bool {
	if o != nil && !IsNil(o.MoonAltitude) {
		return true
	}

	return false
}

// SetMoonAltitude gets a reference to the given float32 and assigns it to the MoonAltitude field.
func (o *Astronomy) SetMoonAltitude(v float32) {
	o.MoonAltitude = &v
}

// GetMoonDistance returns the MoonDistance field value if set, zero value otherwise.
func (o *Astronomy) GetMoonDistance() float32 {
	if o == nil || IsNil(o.MoonDistance) {
		var ret float32
		return ret
	}
	return *o.MoonDistance
}

// GetMoonDistanceOk returns a tuple with the MoonDistance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMoonDistanceOk() (*float32, bool) {
	if o == nil || IsNil(o.MoonDistance) {
		return nil, false
	}
	return o.MoonDistance, true
}

// HasMoonDistance returns a boolean if a field has been set.
func (o *Astronomy) HasMoonDistance() bool {
	if o != nil && !IsNil(o.MoonDistance) {
		return true
	}

	return false
}

// SetMoonDistance gets a reference to the given float32 and assigns it to the MoonDistance field.
func (o *Astronomy) SetMoonDistance(v float32) {
	o.MoonDistance = &v
}

// GetMoonAzimuth returns the MoonAzimuth field value if set, zero value otherwise.
func (o *Astronomy) GetMoonAzimuth() float32 {
	if o == nil || IsNil(o.MoonAzimuth) {
		var ret float32
		return ret
	}
	return *o.MoonAzimuth
}

// GetMoonAzimuthOk returns a tuple with the MoonAzimuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMoonAzimuthOk() (*float32, bool) {
	if o == nil || IsNil(o.MoonAzimuth) {
		return nil, false
	}
	return o.MoonAzimuth, true
}

// HasMoonAzimuth returns a boolean if a field has been set.
func (o *Astronomy) HasMoonAzimuth() bool {
	if o != nil && !IsNil(o.MoonAzimuth) {
		return true
	}

	return false
}

// SetMoonAzimuth gets a reference to the given float32 and assigns it to the MoonAzimuth field.
func (o *Astronomy) SetMoonAzimuth(v float32) {
	o.MoonAzimuth = &v
}

// GetMoonParallacticAngle returns the MoonParallacticAngle field value if set, zero value otherwise.
func (o *Astronomy) GetMoonParallacticAngle() float32 {
	if o == nil || IsNil(o.MoonParallacticAngle) {
		var ret float32
		return ret
	}
	return *o.MoonParallacticAngle
}

// GetMoonParallacticAngleOk returns a tuple with the MoonParallacticAngle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMoonParallacticAngleOk() (*float32, bool) {
	if o == nil || IsNil(o.MoonParallacticAngle) {
		return nil, false
	}
	return o.MoonParallacticAngle, true
}

// HasMoonParallacticAngle returns a boolean if a field has been set.
func (o *Astronomy) HasMoonParallacticAngle() bool {
	if o != nil && !IsNil(o.MoonParallacticAngle) {
		return true
	}

	return false
}

// SetMoonParallacticAngle gets a reference to the given float32 and assigns it to the MoonParallacticAngle field.
func (o *Astronomy) SetMoonParallacticAngle(v float32) {
	o.MoonParallacticAngle = &v
}

// GetMoonIlluminationPercentage returns the MoonIlluminationPercentage field value if set, zero value otherwise.
func (o *Astronomy) GetMoonIlluminationPercentage() string {
	if o == nil || IsNil(o.MoonIlluminationPercentage) {
		var ret string
		return ret
	}
	return *o.MoonIlluminationPercentage
}

// GetMoonIlluminationPercentageOk returns a tuple with the MoonIlluminationPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMoonIlluminationPercentageOk() (*string, bool) {
	if o == nil || IsNil(o.MoonIlluminationPercentage) {
		return nil, false
	}
	return o.MoonIlluminationPercentage, true
}

// HasMoonIlluminationPercentage returns a boolean if a field has been set.
func (o *Astronomy) HasMoonIlluminationPercentage() bool {
	if o != nil && !IsNil(o.MoonIlluminationPercentage) {
		return true
	}

	return false
}

// SetMoonIlluminationPercentage gets a reference to the given string and assigns it to the MoonIlluminationPercentage field.
func (o *Astronomy) SetMoonIlluminationPercentage(v string) {
	o.MoonIlluminationPercentage = &v
}

// GetMoonAngle returns the MoonAngle field value if set, zero value otherwise.
func (o *Astronomy) GetMoonAngle() float32 {
	if o == nil || IsNil(o.MoonAngle) {
		var ret float32
		return ret
	}
	return *o.MoonAngle
}

// GetMoonAngleOk returns a tuple with the MoonAngle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Astronomy) GetMoonAngleOk() (*float32, bool) {
	if o == nil || IsNil(o.MoonAngle) {
		return nil, false
	}
	return o.MoonAngle, true
}

// HasMoonAngle returns a boolean if a field has been set.
func (o *Astronomy) HasMoonAngle() bool {
	if o != nil && !IsNil(o.MoonAngle) {
		return true
	}

	return false
}

// SetMoonAngle gets a reference to the given float32 and assigns it to the MoonAngle field.
func (o *Astronomy) SetMoonAngle(v float32) {
	o.MoonAngle = &v
}

func (o Astronomy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Astronomy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeZone) {
		toSerialize["time_zone"] = o.TimeZone
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.CurrentTime) {
		toSerialize["current_time"] = o.CurrentTime
	}
	if !IsNil(o.MidNight) {
		toSerialize["mid_night"] = o.MidNight
	}
	if !IsNil(o.NightEnd) {
		toSerialize["night_end"] = o.NightEnd
	}
	if !IsNil(o.Morning) {
		toSerialize["morning"] = o.Morning
	}
	if !IsNil(o.Sunrise) {
		toSerialize["sunrise"] = o.Sunrise
	}
	if !IsNil(o.Sunset) {
		toSerialize["sunset"] = o.Sunset
	}
	if !IsNil(o.Evening) {
		toSerialize["evening"] = o.Evening
	}
	if !IsNil(o.NightBegin) {
		toSerialize["night_begin"] = o.NightBegin
	}
	if !IsNil(o.SunStatus) {
		toSerialize["sun_status"] = o.SunStatus
	}
	if !IsNil(o.SolarNoon) {
		toSerialize["solar_noon"] = o.SolarNoon
	}
	if !IsNil(o.DayLength) {
		toSerialize["day_length"] = o.DayLength
	}
	if !IsNil(o.SunAltitude) {
		toSerialize["sun_altitude"] = o.SunAltitude
	}
	if !IsNil(o.SunDistance) {
		toSerialize["sun_distance"] = o.SunDistance
	}
	if !IsNil(o.SunAzimuth) {
		toSerialize["sun_azimuth"] = o.SunAzimuth
	}
	if !IsNil(o.MoonPhase) {
		toSerialize["moon_phase"] = o.MoonPhase
	}
	if !IsNil(o.Moonrise) {
		toSerialize["moonrise"] = o.Moonrise
	}
	if !IsNil(o.Moonset) {
		toSerialize["moonset"] = o.Moonset
	}
	if !IsNil(o.MoonStatus) {
		toSerialize["moon_status"] = o.MoonStatus
	}
	if !IsNil(o.MoonAltitude) {
		toSerialize["moon_altitude"] = o.MoonAltitude
	}
	if !IsNil(o.MoonDistance) {
		toSerialize["moon_distance"] = o.MoonDistance
	}
	if !IsNil(o.MoonAzimuth) {
		toSerialize["moon_azimuth"] = o.MoonAzimuth
	}
	if !IsNil(o.MoonParallacticAngle) {
		toSerialize["moon_parallactic_angle"] = o.MoonParallacticAngle
	}
	if !IsNil(o.MoonIlluminationPercentage) {
		toSerialize["moon_illumination_percentage"] = o.MoonIlluminationPercentage
	}
	if !IsNil(o.MoonAngle) {
		toSerialize["moon_angle"] = o.MoonAngle
	}
	return toSerialize, nil
}

type NullableAstronomy struct {
	value *Astronomy
	isSet bool
}

func (v NullableAstronomy) Get() *Astronomy {
	return v.value
}

func (v *NullableAstronomy) Set(val *Astronomy) {
	v.value = val
	v.isSet = true
}

func (v NullableAstronomy) IsSet() bool {
	return v.isSet
}

func (v *NullableAstronomy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAstronomy(val *Astronomy) *NullableAstronomy {
	return &NullableAstronomy{value: val, isSet: true}
}

func (v NullableAstronomy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAstronomy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


