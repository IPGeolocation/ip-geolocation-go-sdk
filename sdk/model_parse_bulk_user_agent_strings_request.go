/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the ParseBulkUserAgentStringsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParseBulkUserAgentStringsRequest{}

// ParseBulkUserAgentStringsRequest struct for ParseBulkUserAgentStringsRequest
type ParseBulkUserAgentStringsRequest struct {
	UaStrings []string `json:"uaStrings,omitempty"`
}

// NewParseBulkUserAgentStringsRequest instantiates a new ParseBulkUserAgentStringsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParseBulkUserAgentStringsRequest() *ParseBulkUserAgentStringsRequest {
	this := ParseBulkUserAgentStringsRequest{}
	return &this
}

// NewParseBulkUserAgentStringsRequestWithDefaults instantiates a new ParseBulkUserAgentStringsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParseBulkUserAgentStringsRequestWithDefaults() *ParseBulkUserAgentStringsRequest {
	this := ParseBulkUserAgentStringsRequest{}
	return &this
}

// GetUaStrings returns the UaStrings field value if set, zero value otherwise.
func (o *ParseBulkUserAgentStringsRequest) GetUaStrings() []string {
	if o == nil || IsNil(o.UaStrings) {
		var ret []string
		return ret
	}
	return o.UaStrings
}

// GetUaStringsOk returns a tuple with the UaStrings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParseBulkUserAgentStringsRequest) GetUaStringsOk() ([]string, bool) {
	if o == nil || IsNil(o.UaStrings) {
		return nil, false
	}
	return o.UaStrings, true
}

// HasUaStrings returns a boolean if a field has been set.
func (o *ParseBulkUserAgentStringsRequest) HasUaStrings() bool {
	if o != nil && !IsNil(o.UaStrings) {
		return true
	}

	return false
}

// SetUaStrings gets a reference to the given []string and assigns it to the UaStrings field.
func (o *ParseBulkUserAgentStringsRequest) SetUaStrings(v []string) {
	o.UaStrings = v
}

func (o ParseBulkUserAgentStringsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParseBulkUserAgentStringsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UaStrings) {
		toSerialize["uaStrings"] = o.UaStrings
	}
	return toSerialize, nil
}

type NullableParseBulkUserAgentStringsRequest struct {
	value *ParseBulkUserAgentStringsRequest
	isSet bool
}

func (v NullableParseBulkUserAgentStringsRequest) Get() *ParseBulkUserAgentStringsRequest {
	return v.value
}

func (v *NullableParseBulkUserAgentStringsRequest) Set(val *ParseBulkUserAgentStringsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableParseBulkUserAgentStringsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableParseBulkUserAgentStringsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParseBulkUserAgentStringsRequest(val *ParseBulkUserAgentStringsRequest) *NullableParseBulkUserAgentStringsRequest {
	return &NullableParseBulkUserAgentStringsRequest{value: val, isSet: true}
}

func (v NullableParseBulkUserAgentStringsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParseBulkUserAgentStringsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


