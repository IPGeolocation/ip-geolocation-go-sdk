/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the AstronomyLocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AstronomyLocation{}

// AstronomyLocation struct for AstronomyLocation
type AstronomyLocation struct {
	LocationString *string `json:"location_string,omitempty"`
	ContinentCode *string `json:"continent_code,omitempty"`
	ContinentName *string `json:"continent_name,omitempty"`
	CountryCode2 *string `json:"country_code2,omitempty"`
	CountryCode3 *string `json:"country_code3,omitempty"`
	CountryName *string `json:"country_name,omitempty"`
	CountryNameOfficial *string `json:"country_name_official,omitempty"`
	IsEu *bool `json:"is_eu,omitempty"`
	StateProv *string `json:"state_prov,omitempty"`
	StateCode *string `json:"state_code,omitempty"`
	District *string `json:"district,omitempty"`
	City *string `json:"city,omitempty"`
	Locality *string `json:"locality,omitempty"`
	Zipcode *string `json:"zipcode,omitempty"`
	Latitude *string `json:"latitude,omitempty"`
	Longitude *string `json:"longitude,omitempty"`
	Elevation *string `json:"elevation,omitempty"`
}

// NewAstronomyLocation instantiates a new AstronomyLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAstronomyLocation() *AstronomyLocation {
	this := AstronomyLocation{}
	return &this
}

// NewAstronomyLocationWithDefaults instantiates a new AstronomyLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAstronomyLocationWithDefaults() *AstronomyLocation {
	this := AstronomyLocation{}
	return &this
}

// GetLocationString returns the LocationString field value if set, zero value otherwise.
func (o *AstronomyLocation) GetLocationString() string {
	if o == nil || IsNil(o.LocationString) {
		var ret string
		return ret
	}
	return *o.LocationString
}

// GetLocationStringOk returns a tuple with the LocationString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetLocationStringOk() (*string, bool) {
	if o == nil || IsNil(o.LocationString) {
		return nil, false
	}
	return o.LocationString, true
}

// HasLocationString returns a boolean if a field has been set.
func (o *AstronomyLocation) HasLocationString() bool {
	if o != nil && !IsNil(o.LocationString) {
		return true
	}

	return false
}

// SetLocationString gets a reference to the given string and assigns it to the LocationString field.
func (o *AstronomyLocation) SetLocationString(v string) {
	o.LocationString = &v
}

// GetContinentCode returns the ContinentCode field value if set, zero value otherwise.
func (o *AstronomyLocation) GetContinentCode() string {
	if o == nil || IsNil(o.ContinentCode) {
		var ret string
		return ret
	}
	return *o.ContinentCode
}

// GetContinentCodeOk returns a tuple with the ContinentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetContinentCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ContinentCode) {
		return nil, false
	}
	return o.ContinentCode, true
}

// HasContinentCode returns a boolean if a field has been set.
func (o *AstronomyLocation) HasContinentCode() bool {
	if o != nil && !IsNil(o.ContinentCode) {
		return true
	}

	return false
}

// SetContinentCode gets a reference to the given string and assigns it to the ContinentCode field.
func (o *AstronomyLocation) SetContinentCode(v string) {
	o.ContinentCode = &v
}

// GetContinentName returns the ContinentName field value if set, zero value otherwise.
func (o *AstronomyLocation) GetContinentName() string {
	if o == nil || IsNil(o.ContinentName) {
		var ret string
		return ret
	}
	return *o.ContinentName
}

// GetContinentNameOk returns a tuple with the ContinentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetContinentNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContinentName) {
		return nil, false
	}
	return o.ContinentName, true
}

// HasContinentName returns a boolean if a field has been set.
func (o *AstronomyLocation) HasContinentName() bool {
	if o != nil && !IsNil(o.ContinentName) {
		return true
	}

	return false
}

// SetContinentName gets a reference to the given string and assigns it to the ContinentName field.
func (o *AstronomyLocation) SetContinentName(v string) {
	o.ContinentName = &v
}

// GetCountryCode2 returns the CountryCode2 field value if set, zero value otherwise.
func (o *AstronomyLocation) GetCountryCode2() string {
	if o == nil || IsNil(o.CountryCode2) {
		var ret string
		return ret
	}
	return *o.CountryCode2
}

// GetCountryCode2Ok returns a tuple with the CountryCode2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetCountryCode2Ok() (*string, bool) {
	if o == nil || IsNil(o.CountryCode2) {
		return nil, false
	}
	return o.CountryCode2, true
}

// HasCountryCode2 returns a boolean if a field has been set.
func (o *AstronomyLocation) HasCountryCode2() bool {
	if o != nil && !IsNil(o.CountryCode2) {
		return true
	}

	return false
}

// SetCountryCode2 gets a reference to the given string and assigns it to the CountryCode2 field.
func (o *AstronomyLocation) SetCountryCode2(v string) {
	o.CountryCode2 = &v
}

// GetCountryCode3 returns the CountryCode3 field value if set, zero value otherwise.
func (o *AstronomyLocation) GetCountryCode3() string {
	if o == nil || IsNil(o.CountryCode3) {
		var ret string
		return ret
	}
	return *o.CountryCode3
}

// GetCountryCode3Ok returns a tuple with the CountryCode3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetCountryCode3Ok() (*string, bool) {
	if o == nil || IsNil(o.CountryCode3) {
		return nil, false
	}
	return o.CountryCode3, true
}

// HasCountryCode3 returns a boolean if a field has been set.
func (o *AstronomyLocation) HasCountryCode3() bool {
	if o != nil && !IsNil(o.CountryCode3) {
		return true
	}

	return false
}

// SetCountryCode3 gets a reference to the given string and assigns it to the CountryCode3 field.
func (o *AstronomyLocation) SetCountryCode3(v string) {
	o.CountryCode3 = &v
}

// GetCountryName returns the CountryName field value if set, zero value otherwise.
func (o *AstronomyLocation) GetCountryName() string {
	if o == nil || IsNil(o.CountryName) {
		var ret string
		return ret
	}
	return *o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetCountryNameOk() (*string, bool) {
	if o == nil || IsNil(o.CountryName) {
		return nil, false
	}
	return o.CountryName, true
}

// HasCountryName returns a boolean if a field has been set.
func (o *AstronomyLocation) HasCountryName() bool {
	if o != nil && !IsNil(o.CountryName) {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given string and assigns it to the CountryName field.
func (o *AstronomyLocation) SetCountryName(v string) {
	o.CountryName = &v
}

// GetCountryNameOfficial returns the CountryNameOfficial field value if set, zero value otherwise.
func (o *AstronomyLocation) GetCountryNameOfficial() string {
	if o == nil || IsNil(o.CountryNameOfficial) {
		var ret string
		return ret
	}
	return *o.CountryNameOfficial
}

// GetCountryNameOfficialOk returns a tuple with the CountryNameOfficial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetCountryNameOfficialOk() (*string, bool) {
	if o == nil || IsNil(o.CountryNameOfficial) {
		return nil, false
	}
	return o.CountryNameOfficial, true
}

// HasCountryNameOfficial returns a boolean if a field has been set.
func (o *AstronomyLocation) HasCountryNameOfficial() bool {
	if o != nil && !IsNil(o.CountryNameOfficial) {
		return true
	}

	return false
}

// SetCountryNameOfficial gets a reference to the given string and assigns it to the CountryNameOfficial field.
func (o *AstronomyLocation) SetCountryNameOfficial(v string) {
	o.CountryNameOfficial = &v
}

// GetIsEu returns the IsEu field value if set, zero value otherwise.
func (o *AstronomyLocation) GetIsEu() bool {
	if o == nil || IsNil(o.IsEu) {
		var ret bool
		return ret
	}
	return *o.IsEu
}

// GetIsEuOk returns a tuple with the IsEu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetIsEuOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEu) {
		return nil, false
	}
	return o.IsEu, true
}

// HasIsEu returns a boolean if a field has been set.
func (o *AstronomyLocation) HasIsEu() bool {
	if o != nil && !IsNil(o.IsEu) {
		return true
	}

	return false
}

// SetIsEu gets a reference to the given bool and assigns it to the IsEu field.
func (o *AstronomyLocation) SetIsEu(v bool) {
	o.IsEu = &v
}

// GetStateProv returns the StateProv field value if set, zero value otherwise.
func (o *AstronomyLocation) GetStateProv() string {
	if o == nil || IsNil(o.StateProv) {
		var ret string
		return ret
	}
	return *o.StateProv
}

// GetStateProvOk returns a tuple with the StateProv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetStateProvOk() (*string, bool) {
	if o == nil || IsNil(o.StateProv) {
		return nil, false
	}
	return o.StateProv, true
}

// HasStateProv returns a boolean if a field has been set.
func (o *AstronomyLocation) HasStateProv() bool {
	if o != nil && !IsNil(o.StateProv) {
		return true
	}

	return false
}

// SetStateProv gets a reference to the given string and assigns it to the StateProv field.
func (o *AstronomyLocation) SetStateProv(v string) {
	o.StateProv = &v
}

// GetStateCode returns the StateCode field value if set, zero value otherwise.
func (o *AstronomyLocation) GetStateCode() string {
	if o == nil || IsNil(o.StateCode) {
		var ret string
		return ret
	}
	return *o.StateCode
}

// GetStateCodeOk returns a tuple with the StateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetStateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StateCode) {
		return nil, false
	}
	return o.StateCode, true
}

// HasStateCode returns a boolean if a field has been set.
func (o *AstronomyLocation) HasStateCode() bool {
	if o != nil && !IsNil(o.StateCode) {
		return true
	}

	return false
}

// SetStateCode gets a reference to the given string and assigns it to the StateCode field.
func (o *AstronomyLocation) SetStateCode(v string) {
	o.StateCode = &v
}

// GetDistrict returns the District field value if set, zero value otherwise.
func (o *AstronomyLocation) GetDistrict() string {
	if o == nil || IsNil(o.District) {
		var ret string
		return ret
	}
	return *o.District
}

// GetDistrictOk returns a tuple with the District field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetDistrictOk() (*string, bool) {
	if o == nil || IsNil(o.District) {
		return nil, false
	}
	return o.District, true
}

// HasDistrict returns a boolean if a field has been set.
func (o *AstronomyLocation) HasDistrict() bool {
	if o != nil && !IsNil(o.District) {
		return true
	}

	return false
}

// SetDistrict gets a reference to the given string and assigns it to the District field.
func (o *AstronomyLocation) SetDistrict(v string) {
	o.District = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *AstronomyLocation) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *AstronomyLocation) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *AstronomyLocation) SetCity(v string) {
	o.City = &v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *AstronomyLocation) GetLocality() string {
	if o == nil || IsNil(o.Locality) {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetLocalityOk() (*string, bool) {
	if o == nil || IsNil(o.Locality) {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *AstronomyLocation) HasLocality() bool {
	if o != nil && !IsNil(o.Locality) {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *AstronomyLocation) SetLocality(v string) {
	o.Locality = &v
}

// GetZipcode returns the Zipcode field value if set, zero value otherwise.
func (o *AstronomyLocation) GetZipcode() string {
	if o == nil || IsNil(o.Zipcode) {
		var ret string
		return ret
	}
	return *o.Zipcode
}

// GetZipcodeOk returns a tuple with the Zipcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetZipcodeOk() (*string, bool) {
	if o == nil || IsNil(o.Zipcode) {
		return nil, false
	}
	return o.Zipcode, true
}

// HasZipcode returns a boolean if a field has been set.
func (o *AstronomyLocation) HasZipcode() bool {
	if o != nil && !IsNil(o.Zipcode) {
		return true
	}

	return false
}

// SetZipcode gets a reference to the given string and assigns it to the Zipcode field.
func (o *AstronomyLocation) SetZipcode(v string) {
	o.Zipcode = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *AstronomyLocation) GetLatitude() string {
	if o == nil || IsNil(o.Latitude) {
		var ret string
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetLatitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *AstronomyLocation) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given string and assigns it to the Latitude field.
func (o *AstronomyLocation) SetLatitude(v string) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *AstronomyLocation) GetLongitude() string {
	if o == nil || IsNil(o.Longitude) {
		var ret string
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetLongitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *AstronomyLocation) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given string and assigns it to the Longitude field.
func (o *AstronomyLocation) SetLongitude(v string) {
	o.Longitude = &v
}

// GetElevation returns the Elevation field value if set, zero value otherwise.
func (o *AstronomyLocation) GetElevation() string {
	if o == nil || IsNil(o.Elevation) {
		var ret string
		return ret
	}
	return *o.Elevation
}

// GetElevationOk returns a tuple with the Elevation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyLocation) GetElevationOk() (*string, bool) {
	if o == nil || IsNil(o.Elevation) {
		return nil, false
	}
	return o.Elevation, true
}

// HasElevation returns a boolean if a field has been set.
func (o *AstronomyLocation) HasElevation() bool {
	if o != nil && !IsNil(o.Elevation) {
		return true
	}

	return false
}

// SetElevation gets a reference to the given string and assigns it to the Elevation field.
func (o *AstronomyLocation) SetElevation(v string) {
	o.Elevation = &v
}

func (o AstronomyLocation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AstronomyLocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LocationString) {
		toSerialize["location_string"] = o.LocationString
	}
	if !IsNil(o.ContinentCode) {
		toSerialize["continent_code"] = o.ContinentCode
	}
	if !IsNil(o.ContinentName) {
		toSerialize["continent_name"] = o.ContinentName
	}
	if !IsNil(o.CountryCode2) {
		toSerialize["country_code2"] = o.CountryCode2
	}
	if !IsNil(o.CountryCode3) {
		toSerialize["country_code3"] = o.CountryCode3
	}
	if !IsNil(o.CountryName) {
		toSerialize["country_name"] = o.CountryName
	}
	if !IsNil(o.CountryNameOfficial) {
		toSerialize["country_name_official"] = o.CountryNameOfficial
	}
	if !IsNil(o.IsEu) {
		toSerialize["is_eu"] = o.IsEu
	}
	if !IsNil(o.StateProv) {
		toSerialize["state_prov"] = o.StateProv
	}
	if !IsNil(o.StateCode) {
		toSerialize["state_code"] = o.StateCode
	}
	if !IsNil(o.District) {
		toSerialize["district"] = o.District
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Locality) {
		toSerialize["locality"] = o.Locality
	}
	if !IsNil(o.Zipcode) {
		toSerialize["zipcode"] = o.Zipcode
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !IsNil(o.Elevation) {
		toSerialize["elevation"] = o.Elevation
	}
	return toSerialize, nil
}

type NullableAstronomyLocation struct {
	value *AstronomyLocation
	isSet bool
}

func (v NullableAstronomyLocation) Get() *AstronomyLocation {
	return v.value
}

func (v *NullableAstronomyLocation) Set(val *AstronomyLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableAstronomyLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableAstronomyLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAstronomyLocation(val *AstronomyLocation) *NullableAstronomyLocation {
	return &NullableAstronomyLocation{value: val, isSet: true}
}

func (v NullableAstronomyLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAstronomyLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


