/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the TimezoneDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimezoneDetail{}

// TimezoneDetail struct for TimezoneDetail
type TimezoneDetail struct {
	Name *string `json:"name,omitempty"`
	Offset *int32 `json:"offset,omitempty"`
	OffsetWithDst *int32 `json:"offset_with_dst,omitempty"`
	Date *string `json:"date,omitempty"`
	DateTime *string `json:"date_time,omitempty"`
	DateTimeTxt *string `json:"date_time_txt,omitempty"`
	DateTimeWti *string `json:"date_time_wti,omitempty"`
	DateTimeYmd *string `json:"date_time_ymd,omitempty"`
	DateTimeUnix *float64 `json:"date_time_unix,omitempty"`
	Time24 *string `json:"time_24,omitempty"`
	Time12 *string `json:"time_12,omitempty"`
	Week *int32 `json:"week,omitempty"`
	Month *int32 `json:"month,omitempty"`
	Year *int32 `json:"year,omitempty"`
	YearAbbr *string `json:"year_abbr,omitempty"`
	IsDst *bool `json:"is_dst,omitempty"`
	DstSavings *int32 `json:"dst_savings,omitempty"`
	DstExists *bool `json:"dst_exists,omitempty"`
	DstStart *TimezoneDetailDstStart `json:"dst_start,omitempty"`
	DstEnd *TimezoneDetailDstEnd `json:"dst_end,omitempty"`
}

// NewTimezoneDetail instantiates a new TimezoneDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimezoneDetail() *TimezoneDetail {
	this := TimezoneDetail{}
	return &this
}

// NewTimezoneDetailWithDefaults instantiates a new TimezoneDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimezoneDetailWithDefaults() *TimezoneDetail {
	this := TimezoneDetail{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TimezoneDetail) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TimezoneDetail) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TimezoneDetail) SetName(v string) {
	o.Name = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *TimezoneDetail) GetOffset() int32 {
	if o == nil || IsNil(o.Offset) {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *TimezoneDetail) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *TimezoneDetail) SetOffset(v int32) {
	o.Offset = &v
}

// GetOffsetWithDst returns the OffsetWithDst field value if set, zero value otherwise.
func (o *TimezoneDetail) GetOffsetWithDst() int32 {
	if o == nil || IsNil(o.OffsetWithDst) {
		var ret int32
		return ret
	}
	return *o.OffsetWithDst
}

// GetOffsetWithDstOk returns a tuple with the OffsetWithDst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetOffsetWithDstOk() (*int32, bool) {
	if o == nil || IsNil(o.OffsetWithDst) {
		return nil, false
	}
	return o.OffsetWithDst, true
}

// HasOffsetWithDst returns a boolean if a field has been set.
func (o *TimezoneDetail) HasOffsetWithDst() bool {
	if o != nil && !IsNil(o.OffsetWithDst) {
		return true
	}

	return false
}

// SetOffsetWithDst gets a reference to the given int32 and assigns it to the OffsetWithDst field.
func (o *TimezoneDetail) SetOffsetWithDst(v int32) {
	o.OffsetWithDst = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *TimezoneDetail) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *TimezoneDetail) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *TimezoneDetail) SetDate(v string) {
	o.Date = &v
}

// GetDateTime returns the DateTime field value if set, zero value otherwise.
func (o *TimezoneDetail) GetDateTime() string {
	if o == nil || IsNil(o.DateTime) {
		var ret string
		return ret
	}
	return *o.DateTime
}

// GetDateTimeOk returns a tuple with the DateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DateTime) {
		return nil, false
	}
	return o.DateTime, true
}

// HasDateTime returns a boolean if a field has been set.
func (o *TimezoneDetail) HasDateTime() bool {
	if o != nil && !IsNil(o.DateTime) {
		return true
	}

	return false
}

// SetDateTime gets a reference to the given string and assigns it to the DateTime field.
func (o *TimezoneDetail) SetDateTime(v string) {
	o.DateTime = &v
}

// GetDateTimeTxt returns the DateTimeTxt field value if set, zero value otherwise.
func (o *TimezoneDetail) GetDateTimeTxt() string {
	if o == nil || IsNil(o.DateTimeTxt) {
		var ret string
		return ret
	}
	return *o.DateTimeTxt
}

// GetDateTimeTxtOk returns a tuple with the DateTimeTxt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetDateTimeTxtOk() (*string, bool) {
	if o == nil || IsNil(o.DateTimeTxt) {
		return nil, false
	}
	return o.DateTimeTxt, true
}

// HasDateTimeTxt returns a boolean if a field has been set.
func (o *TimezoneDetail) HasDateTimeTxt() bool {
	if o != nil && !IsNil(o.DateTimeTxt) {
		return true
	}

	return false
}

// SetDateTimeTxt gets a reference to the given string and assigns it to the DateTimeTxt field.
func (o *TimezoneDetail) SetDateTimeTxt(v string) {
	o.DateTimeTxt = &v
}

// GetDateTimeWti returns the DateTimeWti field value if set, zero value otherwise.
func (o *TimezoneDetail) GetDateTimeWti() string {
	if o == nil || IsNil(o.DateTimeWti) {
		var ret string
		return ret
	}
	return *o.DateTimeWti
}

// GetDateTimeWtiOk returns a tuple with the DateTimeWti field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetDateTimeWtiOk() (*string, bool) {
	if o == nil || IsNil(o.DateTimeWti) {
		return nil, false
	}
	return o.DateTimeWti, true
}

// HasDateTimeWti returns a boolean if a field has been set.
func (o *TimezoneDetail) HasDateTimeWti() bool {
	if o != nil && !IsNil(o.DateTimeWti) {
		return true
	}

	return false
}

// SetDateTimeWti gets a reference to the given string and assigns it to the DateTimeWti field.
func (o *TimezoneDetail) SetDateTimeWti(v string) {
	o.DateTimeWti = &v
}

// GetDateTimeYmd returns the DateTimeYmd field value if set, zero value otherwise.
func (o *TimezoneDetail) GetDateTimeYmd() string {
	if o == nil || IsNil(o.DateTimeYmd) {
		var ret string
		return ret
	}
	return *o.DateTimeYmd
}

// GetDateTimeYmdOk returns a tuple with the DateTimeYmd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetDateTimeYmdOk() (*string, bool) {
	if o == nil || IsNil(o.DateTimeYmd) {
		return nil, false
	}
	return o.DateTimeYmd, true
}

// HasDateTimeYmd returns a boolean if a field has been set.
func (o *TimezoneDetail) HasDateTimeYmd() bool {
	if o != nil && !IsNil(o.DateTimeYmd) {
		return true
	}

	return false
}

// SetDateTimeYmd gets a reference to the given time.Time and assigns it to the DateTimeYmd field.
func (o *TimezoneDetail) SetDateTimeYmd(v string) {
	o.DateTimeYmd = &v
}

// GetDateTimeUnix returns the DateTimeUnix field value if set, zero value otherwise.
func (o *TimezoneDetail) GetDateTimeUnix() float64 {
	if o == nil || IsNil(o.DateTimeUnix) {
		var ret float64
		return ret
	}
	return *o.DateTimeUnix
}

// GetDateTimeUnixOk returns a tuple with the DateTimeUnix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetDateTimeUnixOk() (*float64, bool) {
	if o == nil || IsNil(o.DateTimeUnix) {
		return nil, false
	}
	return o.DateTimeUnix, true
}

// HasDateTimeUnix returns a boolean if a field has been set.
func (o *TimezoneDetail) HasDateTimeUnix() bool {
	if o != nil && !IsNil(o.DateTimeUnix) {
		return true
	}

	return false
}

// SetDateTimeUnix gets a reference to the given float64 and assigns it to the DateTimeUnix field.
func (o *TimezoneDetail) SetDateTimeUnix(v float64) {
	o.DateTimeUnix = &v
}

// GetTime24 returns the Time24 field value if set, zero value otherwise.
func (o *TimezoneDetail) GetTime24() string {
	if o == nil || IsNil(o.Time24) {
		var ret string
		return ret
	}
	return *o.Time24
}

// GetTime24Ok returns a tuple with the Time24 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetTime24Ok() (*string, bool) {
	if o == nil || IsNil(o.Time24) {
		return nil, false
	}
	return o.Time24, true
}

// HasTime24 returns a boolean if a field has been set.
func (o *TimezoneDetail) HasTime24() bool {
	if o != nil && !IsNil(o.Time24) {
		return true
	}

	return false
}

// SetTime24 gets a reference to the given string and assigns it to the Time24 field.
func (o *TimezoneDetail) SetTime24(v string) {
	o.Time24 = &v
}

// GetTime12 returns the Time12 field value if set, zero value otherwise.
func (o *TimezoneDetail) GetTime12() string {
	if o == nil || IsNil(o.Time12) {
		var ret string
		return ret
	}
	return *o.Time12
}

// GetTime12Ok returns a tuple with the Time12 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetTime12Ok() (*string, bool) {
	if o == nil || IsNil(o.Time12) {
		return nil, false
	}
	return o.Time12, true
}

// HasTime12 returns a boolean if a field has been set.
func (o *TimezoneDetail) HasTime12() bool {
	if o != nil && !IsNil(o.Time12) {
		return true
	}

	return false
}

// SetTime12 gets a reference to the given string and assigns it to the Time12 field.
func (o *TimezoneDetail) SetTime12(v string) {
	o.Time12 = &v
}

// GetWeek returns the Week field value if set, zero value otherwise.
func (o *TimezoneDetail) GetWeek() int32 {
	if o == nil || IsNil(o.Week) {
		var ret int32
		return ret
	}
	return *o.Week
}

// GetWeekOk returns a tuple with the Week field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetWeekOk() (*int32, bool) {
	if o == nil || IsNil(o.Week) {
		return nil, false
	}
	return o.Week, true
}

// HasWeek returns a boolean if a field has been set.
func (o *TimezoneDetail) HasWeek() bool {
	if o != nil && !IsNil(o.Week) {
		return true
	}

	return false
}

// SetWeek gets a reference to the given int32 and assigns it to the Week field.
func (o *TimezoneDetail) SetWeek(v int32) {
	o.Week = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *TimezoneDetail) GetMonth() int32 {
	if o == nil || IsNil(o.Month) {
		var ret int32
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *TimezoneDetail) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given int32 and assigns it to the Month field.
func (o *TimezoneDetail) SetMonth(v int32) {
	o.Month = &v
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *TimezoneDetail) GetYear() int32 {
	if o == nil || IsNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetYearOk() (*int32, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *TimezoneDetail) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *TimezoneDetail) SetYear(v int32) {
	o.Year = &v
}

// GetYearAbbr returns the YearAbbr field value if set, zero value otherwise.
func (o *TimezoneDetail) GetYearAbbr() string {
	if o == nil || IsNil(o.YearAbbr) {
		var ret string
		return ret
	}
	return *o.YearAbbr
}

// GetYearAbbrOk returns a tuple with the YearAbbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetYearAbbrOk() (*string, bool) {
	if o == nil || IsNil(o.YearAbbr) {
		return nil, false
	}
	return o.YearAbbr, true
}

// HasYearAbbr returns a boolean if a field has been set.
func (o *TimezoneDetail) HasYearAbbr() bool {
	if o != nil && !IsNil(o.YearAbbr) {
		return true
	}

	return false
}

// SetYearAbbr gets a reference to the given string and assigns it to the YearAbbr field.
func (o *TimezoneDetail) SetYearAbbr(v string) {
	o.YearAbbr = &v
}

// GetIsDst returns the IsDst field value if set, zero value otherwise.
func (o *TimezoneDetail) GetIsDst() bool {
	if o == nil || IsNil(o.IsDst) {
		var ret bool
		return ret
	}
	return *o.IsDst
}

// GetIsDstOk returns a tuple with the IsDst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetIsDstOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDst) {
		return nil, false
	}
	return o.IsDst, true
}

// HasIsDst returns a boolean if a field has been set.
func (o *TimezoneDetail) HasIsDst() bool {
	if o != nil && !IsNil(o.IsDst) {
		return true
	}

	return false
}

// SetIsDst gets a reference to the given bool and assigns it to the IsDst field.
func (o *TimezoneDetail) SetIsDst(v bool) {
	o.IsDst = &v
}

// GetDstSavings returns the DstSavings field value if set, zero value otherwise.
func (o *TimezoneDetail) GetDstSavings() int32 {
	if o == nil || IsNil(o.DstSavings) {
		var ret int32
		return ret
	}
	return *o.DstSavings
}

// GetDstSavingsOk returns a tuple with the DstSavings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetDstSavingsOk() (*int32, bool) {
	if o == nil || IsNil(o.DstSavings) {
		return nil, false
	}
	return o.DstSavings, true
}

// HasDstSavings returns a boolean if a field has been set.
func (o *TimezoneDetail) HasDstSavings() bool {
	if o != nil && !IsNil(o.DstSavings) {
		return true
	}

	return false
}

// SetDstSavings gets a reference to the given int32 and assigns it to the DstSavings field.
func (o *TimezoneDetail) SetDstSavings(v int32) {
	o.DstSavings = &v
}

// GetDstExists returns the DstExists field value if set, zero value otherwise.
func (o *TimezoneDetail) GetDstExists() bool {
	if o == nil || IsNil(o.DstExists) {
		var ret bool
		return ret
	}
	return *o.DstExists
}

// GetDstExistsOk returns a tuple with the DstExists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetDstExistsOk() (*bool, bool) {
	if o == nil || IsNil(o.DstExists) {
		return nil, false
	}
	return o.DstExists, true
}

// HasDstExists returns a boolean if a field has been set.
func (o *TimezoneDetail) HasDstExists() bool {
	if o != nil && !IsNil(o.DstExists) {
		return true
	}

	return false
}

// SetDstExists gets a reference to the given bool and assigns it to the DstExists field.
func (o *TimezoneDetail) SetDstExists(v bool) {
	o.DstExists = &v
}

// GetDstStart returns the DstStart field value if set, zero value otherwise.
func (o *TimezoneDetail) GetDstStart() TimezoneDetailDstStart {
	if o == nil || IsNil(o.DstStart) {
		var ret TimezoneDetailDstStart
		return ret
	}
	return *o.DstStart
}

// GetDstStartOk returns a tuple with the DstStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetDstStartOk() (*TimezoneDetailDstStart, bool) {
	if o == nil || IsNil(o.DstStart) {
		return nil, false
	}
	return o.DstStart, true
}

// HasDstStart returns a boolean if a field has been set.
func (o *TimezoneDetail) HasDstStart() bool {
	if o != nil && !IsNil(o.DstStart) {
		return true
	}

	return false
}

// SetDstStart gets a reference to the given TimezoneDetailDstStart and assigns it to the DstStart field.
func (o *TimezoneDetail) SetDstStart(v TimezoneDetailDstStart) {
	o.DstStart = &v
}

// GetDstEnd returns the DstEnd field value if set, zero value otherwise.
func (o *TimezoneDetail) GetDstEnd() TimezoneDetailDstEnd {
	if o == nil || IsNil(o.DstEnd) {
		var ret TimezoneDetailDstEnd
		return ret
	}
	return *o.DstEnd
}

// GetDstEndOk returns a tuple with the DstEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneDetail) GetDstEndOk() (*TimezoneDetailDstEnd, bool) {
	if o == nil || IsNil(o.DstEnd) {
		return nil, false
	}
	return o.DstEnd, true
}

// HasDstEnd returns a boolean if a field has been set.
func (o *TimezoneDetail) HasDstEnd() bool {
	if o != nil && !IsNil(o.DstEnd) {
		return true
	}

	return false
}

// SetDstEnd gets a reference to the given TimezoneDetailDstEnd and assigns it to the DstEnd field.
func (o *TimezoneDetail) SetDstEnd(v TimezoneDetailDstEnd) {
	o.DstEnd = &v
}

func (o TimezoneDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimezoneDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.OffsetWithDst) {
		toSerialize["offset_with_dst"] = o.OffsetWithDst
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.DateTime) {
		toSerialize["date_time"] = o.DateTime
	}
	if !IsNil(o.DateTimeTxt) {
		toSerialize["date_time_txt"] = o.DateTimeTxt
	}
	if !IsNil(o.DateTimeWti) {
		toSerialize["date_time_wti"] = o.DateTimeWti
	}
	if !IsNil(o.DateTimeYmd) {
		toSerialize["date_time_ymd"] = o.DateTimeYmd
	}
	if !IsNil(o.DateTimeUnix) {
		toSerialize["date_time_unix"] = o.DateTimeUnix
	}
	if !IsNil(o.Time24) {
		toSerialize["time_24"] = o.Time24
	}
	if !IsNil(o.Time12) {
		toSerialize["time_12"] = o.Time12
	}
	if !IsNil(o.Week) {
		toSerialize["week"] = o.Week
	}
	if !IsNil(o.Month) {
		toSerialize["month"] = o.Month
	}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if !IsNil(o.YearAbbr) {
		toSerialize["year_abbr"] = o.YearAbbr
	}
	if !IsNil(o.IsDst) {
		toSerialize["is_dst"] = o.IsDst
	}
	if !IsNil(o.DstSavings) {
		toSerialize["dst_savings"] = o.DstSavings
	}
	if !IsNil(o.DstExists) {
		toSerialize["dst_exists"] = o.DstExists
	}
	if !IsNil(o.DstStart) {
		toSerialize["dst_start"] = o.DstStart
	}
	if !IsNil(o.DstEnd) {
		toSerialize["dst_end"] = o.DstEnd
	}
	return toSerialize, nil
}

type NullableTimezoneDetail struct {
	value *TimezoneDetail
	isSet bool
}

func (v NullableTimezoneDetail) Get() *TimezoneDetail {
	return v.value
}

func (v *NullableTimezoneDetail) Set(val *TimezoneDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableTimezoneDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableTimezoneDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimezoneDetail(val *TimezoneDetail) *NullableTimezoneDetail {
	return &NullableTimezoneDetail{value: val, isSet: true}
}

func (v NullableTimezoneDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimezoneDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


