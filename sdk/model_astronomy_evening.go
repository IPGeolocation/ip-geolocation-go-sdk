/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the AstronomyEvening type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AstronomyEvening{}

// AstronomyEvening struct for AstronomyEvening
type AstronomyEvening struct {
	GoldenHourBegin *string `json:"golden_hour_begin,omitempty"`
	GoldenHourEnd *string `json:"golden_hour_end,omitempty"`
	BlueHourBegin *string `json:"blue_hour_begin,omitempty"`
	BlueHourEnd *string `json:"blue_hour_end,omitempty"`
	CivilTwilightBegin *string `json:"civil_twilight_begin,omitempty"`
	CivilTwilightEnd *string `json:"civil_twilight_end,omitempty"`
	NauticalTwilightBegin *string `json:"nautical_twilight_begin,omitempty"`
	NauticalTwilightEnd *string `json:"nautical_twilight_end,omitempty"`
	AstronomicalTwilightBegin *string `json:"astronomical_twilight_begin,omitempty"`
	AstronomicalTwilightEnd *string `json:"astronomical_twilight_end,omitempty"`
}

// NewAstronomyEvening instantiates a new AstronomyEvening object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAstronomyEvening() *AstronomyEvening {
	this := AstronomyEvening{}
	return &this
}

// NewAstronomyEveningWithDefaults instantiates a new AstronomyEvening object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAstronomyEveningWithDefaults() *AstronomyEvening {
	this := AstronomyEvening{}
	return &this
}

// GetGoldenHourBegin returns the GoldenHourBegin field value if set, zero value otherwise.
func (o *AstronomyEvening) GetGoldenHourBegin() string {
	if o == nil || IsNil(o.GoldenHourBegin) {
		var ret string
		return ret
	}
	return *o.GoldenHourBegin
}

// GetGoldenHourBeginOk returns a tuple with the GoldenHourBegin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyEvening) GetGoldenHourBeginOk() (*string, bool) {
	if o == nil || IsNil(o.GoldenHourBegin) {
		return nil, false
	}
	return o.GoldenHourBegin, true
}

// HasGoldenHourBegin returns a boolean if a field has been set.
func (o *AstronomyEvening) HasGoldenHourBegin() bool {
	if o != nil && !IsNil(o.GoldenHourBegin) {
		return true
	}

	return false
}

// SetGoldenHourBegin gets a reference to the given string and assigns it to the GoldenHourBegin field.
func (o *AstronomyEvening) SetGoldenHourBegin(v string) {
	o.GoldenHourBegin = &v
}

// GetGoldenHourEnd returns the GoldenHourEnd field value if set, zero value otherwise.
func (o *AstronomyEvening) GetGoldenHourEnd() string {
	if o == nil || IsNil(o.GoldenHourEnd) {
		var ret string
		return ret
	}
	return *o.GoldenHourEnd
}

// GetGoldenHourEndOk returns a tuple with the GoldenHourEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyEvening) GetGoldenHourEndOk() (*string, bool) {
	if o == nil || IsNil(o.GoldenHourEnd) {
		return nil, false
	}
	return o.GoldenHourEnd, true
}

// HasGoldenHourEnd returns a boolean if a field has been set.
func (o *AstronomyEvening) HasGoldenHourEnd() bool {
	if o != nil && !IsNil(o.GoldenHourEnd) {
		return true
	}

	return false
}

// SetGoldenHourEnd gets a reference to the given string and assigns it to the GoldenHourEnd field.
func (o *AstronomyEvening) SetGoldenHourEnd(v string) {
	o.GoldenHourEnd = &v
}

// GetBlueHourBegin returns the BlueHourBegin field value if set, zero value otherwise.
func (o *AstronomyEvening) GetBlueHourBegin() string {
	if o == nil || IsNil(o.BlueHourBegin) {
		var ret string
		return ret
	}
	return *o.BlueHourBegin
}

// GetBlueHourBeginOk returns a tuple with the BlueHourBegin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyEvening) GetBlueHourBeginOk() (*string, bool) {
	if o == nil || IsNil(o.BlueHourBegin) {
		return nil, false
	}
	return o.BlueHourBegin, true
}

// HasBlueHourBegin returns a boolean if a field has been set.
func (o *AstronomyEvening) HasBlueHourBegin() bool {
	if o != nil && !IsNil(o.BlueHourBegin) {
		return true
	}

	return false
}

// SetBlueHourBegin gets a reference to the given string and assigns it to the BlueHourBegin field.
func (o *AstronomyEvening) SetBlueHourBegin(v string) {
	o.BlueHourBegin = &v
}

// GetBlueHourEnd returns the BlueHourEnd field value if set, zero value otherwise.
func (o *AstronomyEvening) GetBlueHourEnd() string {
	if o == nil || IsNil(o.BlueHourEnd) {
		var ret string
		return ret
	}
	return *o.BlueHourEnd
}

// GetBlueHourEndOk returns a tuple with the BlueHourEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyEvening) GetBlueHourEndOk() (*string, bool) {
	if o == nil || IsNil(o.BlueHourEnd) {
		return nil, false
	}
	return o.BlueHourEnd, true
}

// HasBlueHourEnd returns a boolean if a field has been set.
func (o *AstronomyEvening) HasBlueHourEnd() bool {
	if o != nil && !IsNil(o.BlueHourEnd) {
		return true
	}

	return false
}

// SetBlueHourEnd gets a reference to the given string and assigns it to the BlueHourEnd field.
func (o *AstronomyEvening) SetBlueHourEnd(v string) {
	o.BlueHourEnd = &v
}

// GetCivilTwilightBegin returns the CivilTwilightBegin field value if set, zero value otherwise.
func (o *AstronomyEvening) GetCivilTwilightBegin() string {
	if o == nil || IsNil(o.CivilTwilightBegin) {
		var ret string
		return ret
	}
	return *o.CivilTwilightBegin
}

// GetCivilTwilightBeginOk returns a tuple with the CivilTwilightBegin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyEvening) GetCivilTwilightBeginOk() (*string, bool) {
	if o == nil || IsNil(o.CivilTwilightBegin) {
		return nil, false
	}
	return o.CivilTwilightBegin, true
}

// HasCivilTwilightBegin returns a boolean if a field has been set.
func (o *AstronomyEvening) HasCivilTwilightBegin() bool {
	if o != nil && !IsNil(o.CivilTwilightBegin) {
		return true
	}

	return false
}

// SetCivilTwilightBegin gets a reference to the given string and assigns it to the CivilTwilightBegin field.
func (o *AstronomyEvening) SetCivilTwilightBegin(v string) {
	o.CivilTwilightBegin = &v
}

// GetCivilTwilightEnd returns the CivilTwilightEnd field value if set, zero value otherwise.
func (o *AstronomyEvening) GetCivilTwilightEnd() string {
	if o == nil || IsNil(o.CivilTwilightEnd) {
		var ret string
		return ret
	}
	return *o.CivilTwilightEnd
}

// GetCivilTwilightEndOk returns a tuple with the CivilTwilightEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyEvening) GetCivilTwilightEndOk() (*string, bool) {
	if o == nil || IsNil(o.CivilTwilightEnd) {
		return nil, false
	}
	return o.CivilTwilightEnd, true
}

// HasCivilTwilightEnd returns a boolean if a field has been set.
func (o *AstronomyEvening) HasCivilTwilightEnd() bool {
	if o != nil && !IsNil(o.CivilTwilightEnd) {
		return true
	}

	return false
}

// SetCivilTwilightEnd gets a reference to the given string and assigns it to the CivilTwilightEnd field.
func (o *AstronomyEvening) SetCivilTwilightEnd(v string) {
	o.CivilTwilightEnd = &v
}

// GetNauticalTwilightBegin returns the NauticalTwilightBegin field value if set, zero value otherwise.
func (o *AstronomyEvening) GetNauticalTwilightBegin() string {
	if o == nil || IsNil(o.NauticalTwilightBegin) {
		var ret string
		return ret
	}
	return *o.NauticalTwilightBegin
}

// GetNauticalTwilightBeginOk returns a tuple with the NauticalTwilightBegin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyEvening) GetNauticalTwilightBeginOk() (*string, bool) {
	if o == nil || IsNil(o.NauticalTwilightBegin) {
		return nil, false
	}
	return o.NauticalTwilightBegin, true
}

// HasNauticalTwilightBegin returns a boolean if a field has been set.
func (o *AstronomyEvening) HasNauticalTwilightBegin() bool {
	if o != nil && !IsNil(o.NauticalTwilightBegin) {
		return true
	}

	return false
}

// SetNauticalTwilightBegin gets a reference to the given string and assigns it to the NauticalTwilightBegin field.
func (o *AstronomyEvening) SetNauticalTwilightBegin(v string) {
	o.NauticalTwilightBegin = &v
}

// GetNauticalTwilightEnd returns the NauticalTwilightEnd field value if set, zero value otherwise.
func (o *AstronomyEvening) GetNauticalTwilightEnd() string {
	if o == nil || IsNil(o.NauticalTwilightEnd) {
		var ret string
		return ret
	}
	return *o.NauticalTwilightEnd
}

// GetNauticalTwilightEndOk returns a tuple with the NauticalTwilightEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyEvening) GetNauticalTwilightEndOk() (*string, bool) {
	if o == nil || IsNil(o.NauticalTwilightEnd) {
		return nil, false
	}
	return o.NauticalTwilightEnd, true
}

// HasNauticalTwilightEnd returns a boolean if a field has been set.
func (o *AstronomyEvening) HasNauticalTwilightEnd() bool {
	if o != nil && !IsNil(o.NauticalTwilightEnd) {
		return true
	}

	return false
}

// SetNauticalTwilightEnd gets a reference to the given string and assigns it to the NauticalTwilightEnd field.
func (o *AstronomyEvening) SetNauticalTwilightEnd(v string) {
	o.NauticalTwilightEnd = &v
}

// GetAstronomicalTwilightBegin returns the AstronomicalTwilightBegin field value if set, zero value otherwise.
func (o *AstronomyEvening) GetAstronomicalTwilightBegin() string {
	if o == nil || IsNil(o.AstronomicalTwilightBegin) {
		var ret string
		return ret
	}
	return *o.AstronomicalTwilightBegin
}

// GetAstronomicalTwilightBeginOk returns a tuple with the AstronomicalTwilightBegin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyEvening) GetAstronomicalTwilightBeginOk() (*string, bool) {
	if o == nil || IsNil(o.AstronomicalTwilightBegin) {
		return nil, false
	}
	return o.AstronomicalTwilightBegin, true
}

// HasAstronomicalTwilightBegin returns a boolean if a field has been set.
func (o *AstronomyEvening) HasAstronomicalTwilightBegin() bool {
	if o != nil && !IsNil(o.AstronomicalTwilightBegin) {
		return true
	}

	return false
}

// SetAstronomicalTwilightBegin gets a reference to the given string and assigns it to the AstronomicalTwilightBegin field.
func (o *AstronomyEvening) SetAstronomicalTwilightBegin(v string) {
	o.AstronomicalTwilightBegin = &v
}

// GetAstronomicalTwilightEnd returns the AstronomicalTwilightEnd field value if set, zero value otherwise.
func (o *AstronomyEvening) GetAstronomicalTwilightEnd() string {
	if o == nil || IsNil(o.AstronomicalTwilightEnd) {
		var ret string
		return ret
	}
	return *o.AstronomicalTwilightEnd
}

// GetAstronomicalTwilightEndOk returns a tuple with the AstronomicalTwilightEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AstronomyEvening) GetAstronomicalTwilightEndOk() (*string, bool) {
	if o == nil || IsNil(o.AstronomicalTwilightEnd) {
		return nil, false
	}
	return o.AstronomicalTwilightEnd, true
}

// HasAstronomicalTwilightEnd returns a boolean if a field has been set.
func (o *AstronomyEvening) HasAstronomicalTwilightEnd() bool {
	if o != nil && !IsNil(o.AstronomicalTwilightEnd) {
		return true
	}

	return false
}

// SetAstronomicalTwilightEnd gets a reference to the given string and assigns it to the AstronomicalTwilightEnd field.
func (o *AstronomyEvening) SetAstronomicalTwilightEnd(v string) {
	o.AstronomicalTwilightEnd = &v
}

func (o AstronomyEvening) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AstronomyEvening) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GoldenHourBegin) {
		toSerialize["golden_hour_begin"] = o.GoldenHourBegin
	}
	if !IsNil(o.GoldenHourEnd) {
		toSerialize["golden_hour_end"] = o.GoldenHourEnd
	}
	if !IsNil(o.BlueHourBegin) {
		toSerialize["blue_hour_begin"] = o.BlueHourBegin
	}
	if !IsNil(o.BlueHourEnd) {
		toSerialize["blue_hour_end"] = o.BlueHourEnd
	}
	if !IsNil(o.CivilTwilightBegin) {
		toSerialize["civil_twilight_begin"] = o.CivilTwilightBegin
	}
	if !IsNil(o.CivilTwilightEnd) {
		toSerialize["civil_twilight_end"] = o.CivilTwilightEnd
	}
	if !IsNil(o.NauticalTwilightBegin) {
		toSerialize["nautical_twilight_begin"] = o.NauticalTwilightBegin
	}
	if !IsNil(o.NauticalTwilightEnd) {
		toSerialize["nautical_twilight_end"] = o.NauticalTwilightEnd
	}
	if !IsNil(o.AstronomicalTwilightBegin) {
		toSerialize["astronomical_twilight_begin"] = o.AstronomicalTwilightBegin
	}
	if !IsNil(o.AstronomicalTwilightEnd) {
		toSerialize["astronomical_twilight_end"] = o.AstronomicalTwilightEnd
	}
	return toSerialize, nil
}

type NullableAstronomyEvening struct {
	value *AstronomyEvening
	isSet bool
}

func (v NullableAstronomyEvening) Get() *AstronomyEvening {
	return v.value
}

func (v *NullableAstronomyEvening) Set(val *AstronomyEvening) {
	v.value = val
	v.isSet = true
}

func (v NullableAstronomyEvening) IsSet() bool {
	return v.isSet
}

func (v *NullableAstronomyEvening) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAstronomyEvening(val *AstronomyEvening) *NullableAstronomyEvening {
	return &NullableAstronomyEvening{value: val, isSet: true}
}

func (v NullableAstronomyEvening) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAstronomyEvening) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


