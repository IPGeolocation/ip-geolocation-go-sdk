/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the TimezoneAirport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimezoneAirport{}

// TimezoneAirport struct for TimezoneAirport
type TimezoneAirport struct {
	Type *string `json:"type,omitempty"`
	Name *string `json:"name,omitempty"`
	Latitude *string `json:"latitude,omitempty"`
	Longitude *string `json:"longitude,omitempty"`
	ElevationFt *int32 `json:"elevation_ft,omitempty"`
	ContinentCode *string `json:"continent_code,omitempty"`
	CountryCode *string `json:"country_code,omitempty"`
	StateCode *string `json:"state_code,omitempty"`
	City *string `json:"city,omitempty"`
	IataCode *string `json:"iata_code,omitempty"`
	IcaoCode *string `json:"icao_code,omitempty"`
	FaaCode *string `json:"faa_code,omitempty"`
}

// NewTimezoneAirport instantiates a new TimezoneAirport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimezoneAirport() *TimezoneAirport {
	this := TimezoneAirport{}
	return &this
}

// NewTimezoneAirportWithDefaults instantiates a new TimezoneAirport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimezoneAirportWithDefaults() *TimezoneAirport {
	this := TimezoneAirport{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TimezoneAirport) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TimezoneAirport) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TimezoneAirport) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TimezoneAirport) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TimezoneAirport) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TimezoneAirport) SetName(v string) {
	o.Name = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *TimezoneAirport) GetLatitude() string {
	if o == nil || IsNil(o.Latitude) {
		var ret string
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetLatitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *TimezoneAirport) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given string and assigns it to the Latitude field.
func (o *TimezoneAirport) SetLatitude(v string) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *TimezoneAirport) GetLongitude() string {
	if o == nil || IsNil(o.Longitude) {
		var ret string
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetLongitudeOk() (*string, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *TimezoneAirport) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given string and assigns it to the Longitude field.
func (o *TimezoneAirport) SetLongitude(v string) {
	o.Longitude = &v
}

// GetElevationFt returns the ElevationFt field value if set, zero value otherwise.
func (o *TimezoneAirport) GetElevationFt() int32 {
	if o == nil || IsNil(o.ElevationFt) {
		var ret int32
		return ret
	}
	return *o.ElevationFt
}

// GetElevationFtOk returns a tuple with the ElevationFt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetElevationFtOk() (*int32, bool) {
	if o == nil || IsNil(o.ElevationFt) {
		return nil, false
	}
	return o.ElevationFt, true
}

// HasElevationFt returns a boolean if a field has been set.
func (o *TimezoneAirport) HasElevationFt() bool {
	if o != nil && !IsNil(o.ElevationFt) {
		return true
	}

	return false
}

// SetElevationFt gets a reference to the given int32 and assigns it to the ElevationFt field.
func (o *TimezoneAirport) SetElevationFt(v int32) {
	o.ElevationFt = &v
}

// GetContinentCode returns the ContinentCode field value if set, zero value otherwise.
func (o *TimezoneAirport) GetContinentCode() string {
	if o == nil || IsNil(o.ContinentCode) {
		var ret string
		return ret
	}
	return *o.ContinentCode
}

// GetContinentCodeOk returns a tuple with the ContinentCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetContinentCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ContinentCode) {
		return nil, false
	}
	return o.ContinentCode, true
}

// HasContinentCode returns a boolean if a field has been set.
func (o *TimezoneAirport) HasContinentCode() bool {
	if o != nil && !IsNil(o.ContinentCode) {
		return true
	}

	return false
}

// SetContinentCode gets a reference to the given string and assigns it to the ContinentCode field.
func (o *TimezoneAirport) SetContinentCode(v string) {
	o.ContinentCode = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *TimezoneAirport) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *TimezoneAirport) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *TimezoneAirport) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetStateCode returns the StateCode field value if set, zero value otherwise.
func (o *TimezoneAirport) GetStateCode() string {
	if o == nil || IsNil(o.StateCode) {
		var ret string
		return ret
	}
	return *o.StateCode
}

// GetStateCodeOk returns a tuple with the StateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetStateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.StateCode) {
		return nil, false
	}
	return o.StateCode, true
}

// HasStateCode returns a boolean if a field has been set.
func (o *TimezoneAirport) HasStateCode() bool {
	if o != nil && !IsNil(o.StateCode) {
		return true
	}

	return false
}

// SetStateCode gets a reference to the given string and assigns it to the StateCode field.
func (o *TimezoneAirport) SetStateCode(v string) {
	o.StateCode = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *TimezoneAirport) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *TimezoneAirport) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *TimezoneAirport) SetCity(v string) {
	o.City = &v
}

// GetIataCode returns the IataCode field value if set, zero value otherwise.
func (o *TimezoneAirport) GetIataCode() string {
	if o == nil || IsNil(o.IataCode) {
		var ret string
		return ret
	}
	return *o.IataCode
}

// GetIataCodeOk returns a tuple with the IataCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetIataCodeOk() (*string, bool) {
	if o == nil || IsNil(o.IataCode) {
		return nil, false
	}
	return o.IataCode, true
}

// HasIataCode returns a boolean if a field has been set.
func (o *TimezoneAirport) HasIataCode() bool {
	if o != nil && !IsNil(o.IataCode) {
		return true
	}

	return false
}

// SetIataCode gets a reference to the given string and assigns it to the IataCode field.
func (o *TimezoneAirport) SetIataCode(v string) {
	o.IataCode = &v
}

// GetIcaoCode returns the IcaoCode field value if set, zero value otherwise.
func (o *TimezoneAirport) GetIcaoCode() string {
	if o == nil || IsNil(o.IcaoCode) {
		var ret string
		return ret
	}
	return *o.IcaoCode
}

// GetIcaoCodeOk returns a tuple with the IcaoCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetIcaoCodeOk() (*string, bool) {
	if o == nil || IsNil(o.IcaoCode) {
		return nil, false
	}
	return o.IcaoCode, true
}

// HasIcaoCode returns a boolean if a field has been set.
func (o *TimezoneAirport) HasIcaoCode() bool {
	if o != nil && !IsNil(o.IcaoCode) {
		return true
	}

	return false
}

// SetIcaoCode gets a reference to the given string and assigns it to the IcaoCode field.
func (o *TimezoneAirport) SetIcaoCode(v string) {
	o.IcaoCode = &v
}

// GetFaaCode returns the FaaCode field value if set, zero value otherwise.
func (o *TimezoneAirport) GetFaaCode() string {
	if o == nil || IsNil(o.FaaCode) {
		var ret string
		return ret
	}
	return *o.FaaCode
}

// GetFaaCodeOk returns a tuple with the FaaCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimezoneAirport) GetFaaCodeOk() (*string, bool) {
	if o == nil || IsNil(o.FaaCode) {
		return nil, false
	}
	return o.FaaCode, true
}

// HasFaaCode returns a boolean if a field has been set.
func (o *TimezoneAirport) HasFaaCode() bool {
	if o != nil && !IsNil(o.FaaCode) {
		return true
	}

	return false
}

// SetFaaCode gets a reference to the given string and assigns it to the FaaCode field.
func (o *TimezoneAirport) SetFaaCode(v string) {
	o.FaaCode = &v
}

func (o TimezoneAirport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimezoneAirport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	if !IsNil(o.ElevationFt) {
		toSerialize["elevation_ft"] = o.ElevationFt
	}
	if !IsNil(o.ContinentCode) {
		toSerialize["continent_code"] = o.ContinentCode
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.StateCode) {
		toSerialize["state_code"] = o.StateCode
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.IataCode) {
		toSerialize["iata_code"] = o.IataCode
	}
	if !IsNil(o.IcaoCode) {
		toSerialize["icao_code"] = o.IcaoCode
	}
	if !IsNil(o.FaaCode) {
		toSerialize["faa_code"] = o.FaaCode
	}
	return toSerialize, nil
}

type NullableTimezoneAirport struct {
	value *TimezoneAirport
	isSet bool
}

func (v NullableTimezoneAirport) Get() *TimezoneAirport {
	return v.value
}

func (v *NullableTimezoneAirport) Set(val *TimezoneAirport) {
	v.value = val
	v.isSet = true
}

func (v NullableTimezoneAirport) IsSet() bool {
	return v.isSet
}

func (v *NullableTimezoneAirport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimezoneAirport(val *TimezoneAirport) *NullableTimezoneAirport {
	return &NullableTimezoneAirport{value: val, isSet: true}
}

func (v NullableTimezoneAirport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimezoneAirport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


