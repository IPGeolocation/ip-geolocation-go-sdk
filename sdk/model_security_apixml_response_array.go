/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the SecurityAPIXMLResponseArray type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityAPIXMLResponseArray{}

// SecurityAPIXMLResponseArray struct for SecurityAPIXMLResponseArray
type SecurityAPIXMLResponseArray struct {
	Ip *string `json:"ip,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Security *Security `json:"security,omitempty"`
	Location *LocationMinimal `json:"location,omitempty"`
	Network *NetworkMinimal `json:"network,omitempty"`
	TimeZone *TimeZone `json:"time_zone,omitempty"`
	UserAgent *UserAgentData `json:"user_agent,omitempty"`
	CountryMetadata *CountryMetadata `json:"country_metadata,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
}

// NewSecurityAPIXMLResponseArray instantiates a new SecurityAPIXMLResponseArray object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityAPIXMLResponseArray() *SecurityAPIXMLResponseArray {
	this := SecurityAPIXMLResponseArray{}
	return &this
}

// NewSecurityAPIXMLResponseArrayWithDefaults instantiates a new SecurityAPIXMLResponseArray object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityAPIXMLResponseArrayWithDefaults() *SecurityAPIXMLResponseArray {
	this := SecurityAPIXMLResponseArray{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *SecurityAPIXMLResponseArray) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAPIXMLResponseArray) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *SecurityAPIXMLResponseArray) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *SecurityAPIXMLResponseArray) SetIp(v string) {
	o.Ip = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *SecurityAPIXMLResponseArray) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAPIXMLResponseArray) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *SecurityAPIXMLResponseArray) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *SecurityAPIXMLResponseArray) SetHostname(v string) {
	o.Hostname = &v
}

// GetSecurity returns the Security field value if set, zero value otherwise.
func (o *SecurityAPIXMLResponseArray) GetSecurity() Security {
	if o == nil || IsNil(o.Security) {
		var ret Security
		return ret
	}
	return *o.Security
}

// GetSecurityOk returns a tuple with the Security field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAPIXMLResponseArray) GetSecurityOk() (*Security, bool) {
	if o == nil || IsNil(o.Security) {
		return nil, false
	}
	return o.Security, true
}

// HasSecurity returns a boolean if a field has been set.
func (o *SecurityAPIXMLResponseArray) HasSecurity() bool {
	if o != nil && !IsNil(o.Security) {
		return true
	}

	return false
}

// SetSecurity gets a reference to the given Security and assigns it to the Security field.
func (o *SecurityAPIXMLResponseArray) SetSecurity(v Security) {
	o.Security = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *SecurityAPIXMLResponseArray) GetLocation() LocationMinimal {
	if o == nil || IsNil(o.Location) {
		var ret LocationMinimal
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAPIXMLResponseArray) GetLocationOk() (*LocationMinimal, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *SecurityAPIXMLResponseArray) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given LocationMinimal and assigns it to the Location field.
func (o *SecurityAPIXMLResponseArray) SetLocation(v LocationMinimal) {
	o.Location = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *SecurityAPIXMLResponseArray) GetNetwork() NetworkMinimal {
	if o == nil || IsNil(o.Network) {
		var ret NetworkMinimal
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAPIXMLResponseArray) GetNetworkOk() (*NetworkMinimal, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *SecurityAPIXMLResponseArray) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given NetworkMinimal and assigns it to the Network field.
func (o *SecurityAPIXMLResponseArray) SetNetwork(v NetworkMinimal) {
	o.Network = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *SecurityAPIXMLResponseArray) GetTimeZone() TimeZone {
	if o == nil || IsNil(o.TimeZone) {
		var ret TimeZone
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAPIXMLResponseArray) GetTimeZoneOk() (*TimeZone, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *SecurityAPIXMLResponseArray) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given TimeZone and assigns it to the TimeZone field.
func (o *SecurityAPIXMLResponseArray) SetTimeZone(v TimeZone) {
	o.TimeZone = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *SecurityAPIXMLResponseArray) GetUserAgent() UserAgentData {
	if o == nil || IsNil(o.UserAgent) {
		var ret UserAgentData
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAPIXMLResponseArray) GetUserAgentOk() (*UserAgentData, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *SecurityAPIXMLResponseArray) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given UserAgentData and assigns it to the UserAgent field.
func (o *SecurityAPIXMLResponseArray) SetUserAgent(v UserAgentData) {
	o.UserAgent = &v
}

// GetCountryMetadata returns the CountryMetadata field value if set, zero value otherwise.
func (o *SecurityAPIXMLResponseArray) GetCountryMetadata() CountryMetadata {
	if o == nil || IsNil(o.CountryMetadata) {
		var ret CountryMetadata
		return ret
	}
	return *o.CountryMetadata
}

// GetCountryMetadataOk returns a tuple with the CountryMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAPIXMLResponseArray) GetCountryMetadataOk() (*CountryMetadata, bool) {
	if o == nil || IsNil(o.CountryMetadata) {
		return nil, false
	}
	return o.CountryMetadata, true
}

// HasCountryMetadata returns a boolean if a field has been set.
func (o *SecurityAPIXMLResponseArray) HasCountryMetadata() bool {
	if o != nil && !IsNil(o.CountryMetadata) {
		return true
	}

	return false
}

// SetCountryMetadata gets a reference to the given CountryMetadata and assigns it to the CountryMetadata field.
func (o *SecurityAPIXMLResponseArray) SetCountryMetadata(v CountryMetadata) {
	o.CountryMetadata = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *SecurityAPIXMLResponseArray) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityAPIXMLResponseArray) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *SecurityAPIXMLResponseArray) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *SecurityAPIXMLResponseArray) SetCurrency(v Currency) {
	o.Currency = &v
}

func (o SecurityAPIXMLResponseArray) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityAPIXMLResponseArray) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Security) {
		toSerialize["security"] = o.Security
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.TimeZone) {
		toSerialize["time_zone"] = o.TimeZone
	}
	if !IsNil(o.UserAgent) {
		toSerialize["user_agent"] = o.UserAgent
	}
	if !IsNil(o.CountryMetadata) {
		toSerialize["country_metadata"] = o.CountryMetadata
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	return toSerialize, nil
}

type NullableSecurityAPIXMLResponseArray struct {
	value *SecurityAPIXMLResponseArray
	isSet bool
}

func (v NullableSecurityAPIXMLResponseArray) Get() *SecurityAPIXMLResponseArray {
	return v.value
}

func (v *NullableSecurityAPIXMLResponseArray) Set(val *SecurityAPIXMLResponseArray) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityAPIXMLResponseArray) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityAPIXMLResponseArray) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityAPIXMLResponseArray(val *SecurityAPIXMLResponseArray) *NullableSecurityAPIXMLResponseArray {
	return &NullableSecurityAPIXMLResponseArray{value: val, isSet: true}
}

func (v NullableSecurityAPIXMLResponseArray) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityAPIXMLResponseArray) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


