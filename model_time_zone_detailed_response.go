/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the TimeZoneDetailedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeZoneDetailedResponse{}

// TimeZoneDetailedResponse struct for TimeZoneDetailedResponse
type TimeZoneDetailedResponse struct {
	Ip *string `json:"ip,omitempty"`
	AirportDetails *TimezoneAirport `json:"airport_details,omitempty"`
	LoCodeDetails *TimezoneLocode `json:"lo_code_details,omitempty"`
	Location *TimezoneLocation `json:"location,omitempty"`
	TimeZone *TimezoneDetail `json:"time_zone,omitempty"`
}

// NewTimeZoneDetailedResponse instantiates a new TimeZoneDetailedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeZoneDetailedResponse() *TimeZoneDetailedResponse {
	this := TimeZoneDetailedResponse{}
	return &this
}

// NewTimeZoneDetailedResponseWithDefaults instantiates a new TimeZoneDetailedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeZoneDetailedResponseWithDefaults() *TimeZoneDetailedResponse {
	this := TimeZoneDetailedResponse{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *TimeZoneDetailedResponse) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZoneDetailedResponse) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *TimeZoneDetailedResponse) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *TimeZoneDetailedResponse) SetIp(v string) {
	o.Ip = &v
}

// GetAirportDetails returns the AirportDetails field value if set, zero value otherwise.
func (o *TimeZoneDetailedResponse) GetAirportDetails() TimezoneAirport {
	if o == nil || IsNil(o.AirportDetails) {
		var ret TimezoneAirport
		return ret
	}
	return *o.AirportDetails
}

// GetAirportDetailsOk returns a tuple with the AirportDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZoneDetailedResponse) GetAirportDetailsOk() (*TimezoneAirport, bool) {
	if o == nil || IsNil(o.AirportDetails) {
		return nil, false
	}
	return o.AirportDetails, true
}

// HasAirportDetails returns a boolean if a field has been set.
func (o *TimeZoneDetailedResponse) HasAirportDetails() bool {
	if o != nil && !IsNil(o.AirportDetails) {
		return true
	}

	return false
}

// SetAirportDetails gets a reference to the given TimezoneAirport and assigns it to the AirportDetails field.
func (o *TimeZoneDetailedResponse) SetAirportDetails(v TimezoneAirport) {
	o.AirportDetails = &v
}

// GetLoCodeDetails returns the LoCodeDetails field value if set, zero value otherwise.
func (o *TimeZoneDetailedResponse) GetLoCodeDetails() TimezoneLocode {
	if o == nil || IsNil(o.LoCodeDetails) {
		var ret TimezoneLocode
		return ret
	}
	return *o.LoCodeDetails
}

// GetLoCodeDetailsOk returns a tuple with the LoCodeDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZoneDetailedResponse) GetLoCodeDetailsOk() (*TimezoneLocode, bool) {
	if o == nil || IsNil(o.LoCodeDetails) {
		return nil, false
	}
	return o.LoCodeDetails, true
}

// HasLoCodeDetails returns a boolean if a field has been set.
func (o *TimeZoneDetailedResponse) HasLoCodeDetails() bool {
	if o != nil && !IsNil(o.LoCodeDetails) {
		return true
	}

	return false
}

// SetLoCodeDetails gets a reference to the given TimezoneLocode and assigns it to the LoCodeDetails field.
func (o *TimeZoneDetailedResponse) SetLoCodeDetails(v TimezoneLocode) {
	o.LoCodeDetails = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *TimeZoneDetailedResponse) GetLocation() TimezoneLocation {
	if o == nil || IsNil(o.Location) {
		var ret TimezoneLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZoneDetailedResponse) GetLocationOk() (*TimezoneLocation, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *TimeZoneDetailedResponse) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given TimezoneLocation and assigns it to the Location field.
func (o *TimeZoneDetailedResponse) SetLocation(v TimezoneLocation) {
	o.Location = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *TimeZoneDetailedResponse) GetTimeZone() TimezoneDetail {
	if o == nil || IsNil(o.TimeZone) {
		var ret TimezoneDetail
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeZoneDetailedResponse) GetTimeZoneOk() (*TimezoneDetail, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *TimeZoneDetailedResponse) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given TimezoneDetail and assigns it to the TimeZone field.
func (o *TimeZoneDetailedResponse) SetTimeZone(v TimezoneDetail) {
	o.TimeZone = &v
}

func (o TimeZoneDetailedResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeZoneDetailedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.AirportDetails) {
		toSerialize["airport_details"] = o.AirportDetails
	}
	if !IsNil(o.LoCodeDetails) {
		toSerialize["lo_code_details"] = o.LoCodeDetails
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.TimeZone) {
		toSerialize["time_zone"] = o.TimeZone
	}
	return toSerialize, nil
}

type NullableTimeZoneDetailedResponse struct {
	value *TimeZoneDetailedResponse
	isSet bool
}

func (v NullableTimeZoneDetailedResponse) Get() *TimeZoneDetailedResponse {
	return v.value
}

func (v *NullableTimeZoneDetailedResponse) Set(val *TimeZoneDetailedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeZoneDetailedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeZoneDetailedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeZoneDetailedResponse(val *TimeZoneDetailedResponse) *NullableTimeZoneDetailedResponse {
	return &NullableTimeZoneDetailedResponse{value: val, isSet: true}
}

func (v NullableTimeZoneDetailedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeZoneDetailedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


