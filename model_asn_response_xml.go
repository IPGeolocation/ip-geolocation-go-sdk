/*
IPGeolocation.io - IP intelligence products

Ipgeolocation provides a set of APIs to make ip based decisions.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ipgeolocationsdk

import (
	"encoding/json"
)

// checks if the ASNResponseXML type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ASNResponseXML{}

// ASNResponseXML struct for ASNResponseXML
type ASNResponseXML struct {
	Ip *string `json:"ip,omitempty"`
	Asn *ASNResponseXMLAsn `json:"asn,omitempty"`
}

// NewASNResponseXML instantiates a new ASNResponseXML object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewASNResponseXML() *ASNResponseXML {
	this := ASNResponseXML{}
	return &this
}

// NewASNResponseXMLWithDefaults instantiates a new ASNResponseXML object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewASNResponseXMLWithDefaults() *ASNResponseXML {
	this := ASNResponseXML{}
	return &this
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *ASNResponseXML) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ASNResponseXML) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *ASNResponseXML) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *ASNResponseXML) SetIp(v string) {
	o.Ip = &v
}

// GetAsn returns the Asn field value if set, zero value otherwise.
func (o *ASNResponseXML) GetAsn() ASNResponseXMLAsn {
	if o == nil || IsNil(o.Asn) {
		var ret ASNResponseXMLAsn
		return ret
	}
	return *o.Asn
}

// GetAsnOk returns a tuple with the Asn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ASNResponseXML) GetAsnOk() (*ASNResponseXMLAsn, bool) {
	if o == nil || IsNil(o.Asn) {
		return nil, false
	}
	return o.Asn, true
}

// HasAsn returns a boolean if a field has been set.
func (o *ASNResponseXML) HasAsn() bool {
	if o != nil && !IsNil(o.Asn) {
		return true
	}

	return false
}

// SetAsn gets a reference to the given ASNResponseXMLAsn and assigns it to the Asn field.
func (o *ASNResponseXML) SetAsn(v ASNResponseXMLAsn) {
	o.Asn = &v
}

func (o ASNResponseXML) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ASNResponseXML) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Asn) {
		toSerialize["asn"] = o.Asn
	}
	return toSerialize, nil
}

type NullableASNResponseXML struct {
	value *ASNResponseXML
	isSet bool
}

func (v NullableASNResponseXML) Get() *ASNResponseXML {
	return v.value
}

func (v *NullableASNResponseXML) Set(val *ASNResponseXML) {
	v.value = val
	v.isSet = true
}

func (v NullableASNResponseXML) IsSet() bool {
	return v.isSet
}

func (v *NullableASNResponseXML) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableASNResponseXML(val *ASNResponseXML) *NullableASNResponseXML {
	return &NullableASNResponseXML{value: val, isSet: true}
}

func (v NullableASNResponseXML) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableASNResponseXML) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


